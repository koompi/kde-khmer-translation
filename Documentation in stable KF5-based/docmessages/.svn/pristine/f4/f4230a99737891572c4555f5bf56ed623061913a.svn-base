# translation of kturtle_programming-reference.po to British English
# Copyright (C) 2004 Free Software Foundation, Inc.
# Andrew Coles <andrew_coles@yahoo.co.uk>, 2004.
#
msgid ""
msgstr ""
"Project-Id-Version: kturtle_programming-reference\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2020-06-28 00:39+0000\n"
"PO-Revision-Date: 2004-10-15 12:41+0100\n"
"Last-Translator: Andrew Coles <andrew_coles@yahoo.co.uk>\n"
"Language-Team: British English <kde-l10n-en_gb@kde.org>\n"
"Language: en_GB\n"
"MIME-Version: 1.0\n"
"Content-Type: application/x-xml2pot; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: KBabel 1.9\n"
"Plural-Forms: nplurals=2; plural=n != 1;\n"

#. Tag: title
#: programming-reference.docbook:2
#, fuzzy, no-c-format
#| msgid "&kturtle;'s &logo; Programming Reference"
msgid "&turtlescript; Programming Reference"
msgstr "&kturtle;'s &logo; Programming Reference"

#. Tag: para
#: programming-reference.docbook:3
#, no-c-format
msgid ""
"This is the reference for &kturtle;'s &turtlescript;. In the first section "
"of this chapter have a look at some aspects of the <link linkend=\"grammar"
"\">grammar</link> of &turtlescript; programs. The second section deals "
"exclusively with <link linkend=\"mathematical-operators\">mathematical "
"operators</link>, <link linkend=\"boolean-operators\">boolean (true/false) "
"operators</link> and <link linkend=\"comparing-operators\">comparison "
"operators</link>. The third section is basically a giant list of all <link "
"linkend=\"commands\">commands</link> explaining them one-by-one. Section "
"four explains how to <link linkend=\"assignment-of-variables\">assign</link> "
"values to <link linkend=\"assignment-of-variables\">variables</link>. "
"Finally we explain how to arrange the execution of commands with <link "
"linkend=\"controlling-execution\">execution controlling statements</link> in "
"section five and how to create you own commands with <link linkend=\"learn"
"\">learn</link> in section six."
msgstr ""

#. Tag: title
#: programming-reference.docbook:6
#, no-c-format
msgid "The Grammar of &turtlescript;"
msgstr ""

#. Tag: para
#: programming-reference.docbook:7
#, no-c-format
msgid ""
"As in any language, &turtlescript; has different types of words and symbols. "
"In English we distinguish verbs (like 'to walk' or 'to sing') and nouns "
"(like 'sister' or 'house'), they are used for different purposes. "
"&turtlescript; is a programming language, it is used to instruct &kturtle; "
"what to do."
msgstr ""

#. Tag: para
#: programming-reference.docbook:8
#, no-c-format
msgid ""
"In this section some of &turtlescript;'s different types of words and "
"symbols are briefly explained. We explain <link linkend=\"comment"
"\">comments</link>, <link linkend=\"command\">commands</link> and the three "
"different kinds of literals: <link linkend=\"number\">numbers</link>, <link "
"linkend=\"string\">strings</link> and <link linkend=\"boolean-value"
"\">boolean (true/false) values</link>."
msgstr ""

#. Tag: title
#: programming-reference.docbook:12
#, fuzzy, no-c-format
msgid "Comments"
msgstr "Commands"

#. Tag: para
#: programming-reference.docbook:13
#, no-c-format
msgid ""
"A program consists instructions that are executed when the program is run "
"and so called comments. Comments are not executed, &kturtle; simply ignores "
"them when executing your program. Comment are there for other programmers to "
"make them understand your program better. Everything that follows on a "
"<userinput>#</userinput> symbol is considered a comment in &turtlescript;. "
"For example this little program that does nothing: <screen>\n"
"# this little program does nothing, it is only a comment!\n"
"</screen> It is a bit useless but it explain the matter well."
msgstr ""

#. Tag: para
#: programming-reference.docbook:16
#, no-c-format
msgid ""
"Comments get very useful when the program gets a little bit more complex. It "
"can help to give some advice to other programmers. In the following program "
"you see comments being used together with the <link linkend=\"print\">print</"
"link> command. <screen>\n"
"# this program has been made by Cies Breijs.\n"
"print \"this text will get printed on the canvas\"\n"
"# the previous line is not a comment, but the next line is:\n"
"# print \"this text will not get printed!\"\n"
"</screen> The first line describes the program. The second line is executed "
"by &kturtle; and prints <userinput>this text will get printed on the canvas</"
"userinput> on the canvas. The third line is a comment. And the forth line is "
"a comment that contains a piece of &turtlescript;, if the <userinput>#</"
"userinput> symbol would be removed on the fourth line the print statement "
"will we executed by &kturtle;. Programmers say: the print statement on the "
"fourth line is 'commented out'."
msgstr ""

#. Tag: para
#: programming-reference.docbook:19
#, no-c-format
msgid ""
"Commented lines are <glossterm>highlighted</glossterm> with light gray in "
"the <link linkend=\"the-editor\">code editor</link>."
msgstr ""

#. Tag: title
#: programming-reference.docbook:23 programming-reference.docbook:162
#, no-c-format
msgid "Commands"
msgstr "Commands"

#. Tag: para
#: programming-reference.docbook:24
#, no-c-format
msgid ""
"Using commands you tell the turtle or &kturtle; to do something. Some "
"commands need input, some give output. <screen>\n"
"# forward is a command that needs input, in this case the number 100:\n"
"forward 100\n"
"</screen> The first line is a <link linkend=\"comment\">comment</link>. The "
"second line contains the <userinput>forward</userinput> command and the "
"<link linkend=\"number\">number</link> <userinput>100</userinput>. The "
"number is not part of command, it is considered 'input' for the command."
msgstr ""

#. Tag: para
#: programming-reference.docbook:27
#, no-c-format
msgid ""
"Some commands like &eg; <userinput>go</userinput> need more than one input "
"value. Multiple values have to be separated using the <userinput>,</"
"userinput> character (comma)."
msgstr ""

#. Tag: para
#: programming-reference.docbook:28
#, no-c-format
msgid ""
"For a detailed overview of all commands that &kturtle; supports go <link "
"linkend=\"commands\">here</link>. Built-in commands are "
"<glossterm>highlighted</glossterm> in dark blue"
msgstr ""

#. Tag: title
#: programming-reference.docbook:32
#, no-c-format
msgid "Numbers"
msgstr ""

#. Tag: para
#: programming-reference.docbook:33
#, no-c-format
msgid ""
"Most likely you already know quite a bit about numbers. The way numbers are "
"used in &kturtle; is not much different from spoken language, or math."
msgstr ""

#. Tag: para
#: programming-reference.docbook:34
#, no-c-format
msgid ""
"We have the so called natural numbers: <userinput>0</userinput>, "
"<userinput>1</userinput>, <userinput>2</userinput>, <userinput>3</"
"userinput>, <userinput>4</userinput>, <userinput>5</userinput>, etc. The "
"negative numbers: <userinput>-1</userinput>, <userinput>-2</userinput>, "
"<userinput>-3</userinput>, etc. And the numbers with decimals, or dot-"
"numbers, for example: <userinput>0.1</userinput>, <userinput>3.14</"
"userinput>, <userinput>33.3333</userinput>, <userinput>-5.05</userinput>, "
"<userinput>-1.0</userinput>. The <userinput>.</userinput> character (dot) is "
"used as decimal separator."
msgstr ""

#. Tag: para
#: programming-reference.docbook:37
#, no-c-format
msgid ""
"Numbers can be used in <link linkend=\"mathematical-operators\">mathematical "
"operators</link> and <link linkend=\"comparing-operators\">comparison "
"operators</link>. They can also be stored in <link linkend=\"assignment-of-"
"variables\">variables</link>. Numbers are <glossterm>highlighted</glossterm> "
"in dark red."
msgstr ""

#. Tag: title
#: programming-reference.docbook:43
#, no-c-format
msgid "Strings"
msgstr ""

#. Tag: para
#: programming-reference.docbook:44
#, no-c-format
msgid ""
"First an example: <screen>\n"
"print \"Hello, I'm a string.\"\n"
"</screen> In this example <userinput>print</userinput> is a command where "
"<userinput>\"Hello, I'm a string.\"</userinput> is a string. Strings start "
"and end with the <userinput>\"</userinput> mark, by these marks &kturtle; "
"knows it is a string."
msgstr ""

#. Tag: para
#: programming-reference.docbook:47
#, no-c-format
msgid ""
"Strings can be put in <link linkend=\"assignment-of-variables\">variables</"
"link>, just like <link linkend=\"number\">numbers</link>. Yet, unlike "
"numbers, strings cannot be used in <link linkend=\"mathematical-operators"
"\">mathematical operators</link> or <link linkend=\"comparing-operators"
"\">comparison operators</link>. Strings are <glossterm>highlighted</"
"glossterm> with red."
msgstr ""

#. Tag: title
#: programming-reference.docbook:51
#, no-c-format
msgid "Boolean (true/false) values"
msgstr ""

#. Tag: para
#: programming-reference.docbook:52
#, no-c-format
msgid ""
"There are only two boolean values: <userinput>true</"
"userinput><indexterm><primary>true</primary></indexterm> and "
"<userinput>false</userinput><indexterm><primary>false</primary></indexterm>. "
"Sometimes they are also called: on and off, yes and no, one and zero. But in "
"&turtlescript; we call them, always, <userinput>true</userinput> and "
"<userinput>false</userinput>. Have a look at this piece of &turtlescript;: "
"<screen>\n"
"$a = true\n"
"</screen> If you look in the <link linkend=\"the-inspector\">inspector</"
"link> you can see that the <link linkend=\"assignment-of-variables"
"\">variable</link> <userinput>$a</userinput> is set to <userinput>true</"
"userinput>, and has the boolean type."
msgstr ""

#. Tag: para
#: programming-reference.docbook:55
#, no-c-format
msgid ""
"Often boolean values are the result of a <link linkend=\"comparing-operators"
"\">comparison operator</link>, like in the following piece of "
"&turtlescript;: <screen>\n"
"$answer = 10 &gt; 3\n"
"</screen> The <link linkend=\"assignment-of-variables\">variable</link> "
"<userinput>$answer</userinput> is set to <userinput>true</userinput> because "
"<userinput>10</userinput> is larger than <userinput>3</userinput>."
msgstr ""

#. Tag: para
#: programming-reference.docbook:58
#, no-c-format
msgid ""
"Boolean values, <userinput>true</userinput> and <userinput>false</"
"userinput>, are <glossterm>highlighted</glossterm> with dark red."
msgstr ""

#. Tag: title
#: programming-reference.docbook:66
#, no-c-format
msgid "Mathematical, boolean and comparing operators"
msgstr ""

#. Tag: para
#: programming-reference.docbook:67
#, no-c-format
msgid ""
"The title of this section might sound very difficult, yet it is not as "
"difficult as it sound."
msgstr ""

#. Tag: title
#: programming-reference.docbook:70
#, no-c-format
msgid "Mathematical operators"
msgstr ""

#. Tag: para
#: programming-reference.docbook:71
#, no-c-format
msgid ""
"These are the basic math symbols known as: add (<userinput>+</userinput>), "
"subtract (<userinput>-</userinput>), multiply (<userinput>*</userinput>), "
"divide (<userinput>/</userinput>) and power (<userinput>^</userinput>)."
msgstr ""

#. Tag: para
#: programming-reference.docbook:73
#, no-c-format
msgid ""
"Here a small example of the mathematical operators you can use in "
"&turtlescript;: <screen>\n"
"$add      = 1 + 1\n"
"$subtract = 20 - 5\n"
"$multiply = 15 * 2\n"
"$divide   = 30 / 30\n"
"$power    = 2 ^ 2\n"
"</screen> The values resulting from the mathematical operations get <link "
"linkend=\"assignment-of-variables\">assigned</link> to various <link linkend="
"\"assignment-of-variables\">variables</link>. Using the <link linkend=\"the-"
"inspector\">inspector</link> you can see the values."
msgstr ""

#. Tag: para
#: programming-reference.docbook:76
#, no-c-format
msgid ""
"If you just want a simple calculation to be done you can do something like "
"this:"
msgstr ""
"If you just want a simple calculation to be done you can do something like "
"this:"

#. Tag: screen
#: programming-reference.docbook:77
#, fuzzy, no-c-format
#| msgid "print 2004-12"
msgid "print 2010-12"
msgstr "print 2004-12"

#. Tag: para
#: programming-reference.docbook:78
#, fuzzy, no-c-format
#| msgid ""
#| "Now an example with parentheses: <screen>\n"
#| "print ( ( 20 - 5 ) * 2 / 30 ) + 1\n"
#| "</screen> The expressions inside parentheses will be calculated first. In "
#| "this example, 20-5 will be calculated, then multiplied by 2, divided by "
#| "30, and then 1 is added (giving 2)."
msgid ""
"Now an example with parentheses: <screen>\n"
"print ( ( 20 - 5 ) * 2 / 30 ) + 1\n"
"</screen> The expressions inside parentheses will be calculated first. In "
"this example, 20-5 will be calculated, then multiplied by 2, divided by 30, "
"and then 1 is added (giving 2). Parentheses can also be used in other cases."
msgstr ""
"Now an example with brackets: <screen>\n"
"print ( ( 20 - 5 ) * 2 / 30 ) + 1\n"
"</screen> The expressions inside brackets will be calculated first. In this "
"example, 20-5 will be calculated, then multiplied by 2, divided by 30, and "
"then 1 is added (giving 2)."

#. Tag: para
#: programming-reference.docbook:81
#, no-c-format
msgid ""
"&kturtle; also has more advanced mathematical features in the form of "
"commands. Have a look at the following commands but be aware that it "
"concerns advanced operations: <link linkend=\"round\">round</link>, <link "
"linkend=\"random\">random</link>, <link linkend=\"sqrt\">sqrt</link> , <link "
"linkend=\"pi\">pi</link>, <link linkend=\"sin\">sin</link>, <link linkend="
"\"cos\">cos</link>, <link linkend=\"tan\">tan</link>, <link linkend=\"arcsin"
"\">arcsin</link>, <link linkend=\"arccos\">arccos</link>, <link linkend="
"\"arctan\">arctan</link>."
msgstr ""

#. Tag: title
#: programming-reference.docbook:87
#, no-c-format
msgid "Boolean (true/false) operators"
msgstr ""

#. Tag: para
#: programming-reference.docbook:88
#, no-c-format
msgid ""
"Where <link linkend=\"mathematical-operators\">mathematical operators</link> "
"are mainly for <link linkend=\"number\">numbers</link>, boolean operators "
"are for <link linkend=\"boolean-value\">boolean values</link> "
"(<userinput>true</userinput> and <userinput>false</userinput>). There are "
"only three boolean operators, namely: <userinput>and</"
"userinput><indexterm><primary>and</primary></indexterm>, <userinput>or</"
"userinput><indexterm><primary>or</primary></indexterm>, and <userinput>not</"
"userinput><indexterm><primary>not</primary></indexterm>. The following piece "
"of &turtlescript; shows how to use them: <screen>\n"
"$and_1_1 = true and true    # -> true\n"
"$and_1_0 = true and false   # -> false\n"
"$and_0_1 = false and true   # -> false\n"
"$and_0_0 = false and false  # -> false\n"
"\n"
"$or_1_1 = true or true    # -> true\n"
"$or_1_0 = true or false   # -> true\n"
"$or_0_1 = false or true   # -> true\n"
"$or_0_0 = false or false  # -> false\n"
"\n"
"$not_1 = not true   # -> false\n"
"$not_0 = not false  # -> true\n"
"</screen> Using the <link linkend=\"the-inspector\">inspector</link> you can "
"see the values, yet we also supply these results as little comments at the "
"end of the lines. <userinput>and</userinput> evaluates <userinput>true</"
"userinput> only if both sides are <userinput>true</userinput>. "
"<userinput>or</userinput> evaluates <userinput>true</userinput> if either "
"side is <userinput>true</userinput>. And <userinput>not</userinput> turns a "
"<userinput>true</userinput> into <userinput>false</userinput> and a "
"<userinput>false</userinput> into <userinput>true</userinput>."
msgstr ""

#. Tag: para
#: programming-reference.docbook:91
#, no-c-format
msgid "Boolean operators are <glossterm>highlighted</glossterm> with pink."
msgstr ""

#. Tag: title
#: programming-reference.docbook:94
#, no-c-format
msgid "Some more advanced examples"
msgstr ""

#. Tag: para
#: programming-reference.docbook:95
#, no-c-format
msgid ""
"Consider the following example with <userinput>and</userinput>: <screen>\n"
"$a = 1\n"
"$b = 5\n"
"if (($a &lt; 10) and ($b == 5)) and ($a &lt; $b) {\n"
"  print \"hello\"\n"
"}\n"
"</screen> In this piece of &turtlescript; the result of three <link linkend="
"\"comparing-operators\">comparing operators</link> are merged using "
"<userinput>and</userinput> operators. This means that all three have to "
"evaluate \"true\" in order for the \"hello\" to be printed."
msgstr ""

#. Tag: para
#: programming-reference.docbook:99
#, no-c-format
msgid ""
"An example with <userinput>or</userinput>: <screen>\n"
"$n = 1\n"
"if ($n &lt; 10) or ($n == 2) {\n"
"  print \"hello\"\n"
"}\n"
"</screen> In this piece of &turtlescript; the left side of the "
"<userinput>or</userinput> is evaluating to 'true', the right side to "
"'false'. Since one of the two sides of the <userinput>or</userinput> "
"operator is 'true', the <userinput>or</userinput> operator evaluates 'true'. "
"That means \"hello\" gets printed."
msgstr ""

#. Tag: para
#: programming-reference.docbook:103
#, no-c-format
msgid ""
"And finally an example with <userinput>not</userinput> which changes 'true' "
"into 'false' and 'false' into 'true'. Have a look:"
msgstr ""

#. Tag: screen
#: programming-reference.docbook:104
#, no-c-format
msgid ""
"$n = 1\n"
"if not ($n == 3) {\n"
"  print \"hello\"\n"
"} else {\n"
"  print \"not hello ;-)\"\n"
"}"
msgstr ""

#. Tag: title
#: programming-reference.docbook:109
#, no-c-format
msgid "Comparing operators"
msgstr ""

#. Tag: para
#: programming-reference.docbook:110
#, no-c-format
msgid ""
"Consider this simple comparison: <screen>\n"
"$answer = 10 &gt; 3\n"
"</screen> Here <userinput>10</userinput> is compared to <userinput>3</"
"userinput> with the 'greater than' operator. The result of this comparison, "
"the <link linkend=\"boolean-value\">boolean value</link> <userinput>true</"
"userinput> is stored in the <link linkend=\"assignment-of-variables"
"\">variable</link> <userinput>$answer</userinput>."
msgstr ""

#. Tag: para
#: programming-reference.docbook:113
#, no-c-format
msgid ""
"All <link linkend=\"number\">numbers</link> and <link linkend=\"assignment-"
"of-variables\">variables</link> (that contain numbers) can be compared to "
"each other with comparing operators."
msgstr ""

#. Tag: para
#: programming-reference.docbook:114
#, no-c-format
msgid ""
"Here are all possible comparing operators: <table> <title>Types of "
"questions</title> <tgroup cols=\"3\"> <tbody> <row> <entry><userinput>$A == "
"$B</userinput></entry> <entry>equals</entry> <entry>answer is <quote>true</"
"quote> if <userinput>$A</userinput> equals <userinput>$B</userinput></entry> "
"</row> <row> <entry><userinput>$A != $B</userinput></entry> <entry>not-"
"equals</entry> <entry>answer is <quote>true</quote> if <userinput>$A</"
"userinput> does not equal <userinput>$B</userinput></entry> </row> <row> "
"<entry><userinput>$A &gt; $B</userinput></entry> <entry>greater than</entry> "
"<entry>answer is <quote>true</quote> if <userinput>$A</userinput> is greater "
"than <userinput>$B</userinput></entry> </row> <row> <entry><userinput>$A "
"&lt; $B</userinput></entry> <entry>smaller than</entry> <entry>answer is "
"<quote>true</quote> if <userinput>$A</userinput> is smaller than <userinput>"
"$B</userinput></entry> </row> <row> <entry><userinput>$A &gt;= $B</"
"userinput></entry> <entry>greater than or equals</entry> <entry>answer is "
"<quote>true</quote> if <userinput>$A</userinput> is greater than or equals "
"<userinput>$B</userinput></entry> </row> <row> <entry><userinput>$A &lt;= "
"$B</userinput></entry> <entry>smaller than or equals</entry> <entry>answer "
"is <quote>true</quote> if <userinput>$A</userinput> is smaller than or "
"equals <userinput>$B</userinput></entry> </row> </tbody> </tgroup> </table> "
"Please note that $A and $B have to be <link linkend=\"number\">numbers</"
"link> or <link linkend=\"assignment-of-variables\">variables</link> that "
"contain numbers."
msgstr ""

#. Tag: para
#: programming-reference.docbook:163
#, fuzzy, no-c-format
msgid ""
"Using commands you tell the turtle or &kturtle; to do something. Some "
"commands need input, some give output. In this section we explain all the "
"built-in commands of &kturtle;. Alternatively, using <link linkend=\"learn"
"\">learn</link>, you can create your own commands. Built-in commands we "
"discuss here are <glossterm>highlighted</glossterm> with dark blue."
msgstr ""
"Using commands you tell the turtle or &kturtle; to do something. Some "
"commands need input, some give output. In this section we explain all the "
"commands that can be used in &kturtle;."

#. Tag: title
#: programming-reference.docbook:166
#, no-c-format
msgid "Moving the turtle"
msgstr "Moving the turtle"

#. Tag: para
#: programming-reference.docbook:167
#, no-c-format
msgid "There are several commands to move the turtle over the screen."
msgstr "There are several commands to move the turtle over the screen."

#. Tag: term
#: programming-reference.docbook:172
#, fuzzy, no-c-format
msgid "<term>forward (fw)</term>"
msgstr "<term>for</term>"

#. Tag: primary
#: programming-reference.docbook:172
#, fuzzy, no-c-format
msgid "<primary>forward (fw)</primary>"
msgstr "<term>for</term>"

#. Tag: screen
#: programming-reference.docbook:173
#, no-c-format
msgid "forward X"
msgstr "forward X"

#. Tag: para
#: programming-reference.docbook:173
#, no-c-format
msgid ""
"<userinput>forward</userinput> moves the turtle forward by the amount of X "
"pixels. When the pen is down the turtle will leave a trail. "
"<userinput>forward</userinput> can be abbreviated to <userinput>fw</"
"userinput>"
msgstr ""
"<userinput>forward</userinput> moves the turtle forward by the amount of X "
"pixels. When the pen is down the turtle will leave a trail. "
"<userinput>forward</userinput> can be abbreviated to <userinput>fw</"
"userinput>"

#. Tag: term
#: programming-reference.docbook:180
#, fuzzy, no-c-format
msgid "<term>backward (bw)</term>"
msgstr "<term>clear</term>"

#. Tag: primary
#: programming-reference.docbook:180
#, fuzzy, no-c-format
msgid "<primary>backward (bw)</primary>"
msgstr "<term>clear</term>"

#. Tag: screen
#: programming-reference.docbook:181
#, no-c-format
msgid "backward X"
msgstr "backward X"

#. Tag: para
#: programming-reference.docbook:181
#, no-c-format
msgid ""
"<userinput>backward</userinput> moves the turtle backward by the amount of X "
"pixels. When the pen is down the turtle will leave a trail. "
"<userinput>backward</userinput> can be abbreviated to <userinput>bw</"
"userinput>."
msgstr ""
"<userinput>backward</userinput> moves the turtle backward by the amount of X "
"pixels. When the pen is down the turtle will leave a trail. "
"<userinput>backward</userinput> can be abbreviated to <userinput>bw</"
"userinput>."

#. Tag: term
#: programming-reference.docbook:188
#, fuzzy, no-c-format
msgid "<term>turnleft (tl)</term>"
msgstr "<term>reset</term>"

#. Tag: primary
#: programming-reference.docbook:188
#, fuzzy, no-c-format
msgid "<primary>turnleft (tl)</primary>"
msgstr "<term>reset</term>"

#. Tag: screen
#: programming-reference.docbook:189
#, no-c-format
msgid "turnleft X"
msgstr "turnleft X"

#. Tag: para
#: programming-reference.docbook:189
#, no-c-format
msgid ""
"<userinput>turnleft</userinput> commands the turtle to turn an amount of X "
"degrees to the left. <userinput>turnleft</userinput> can be abbreviated to "
"<userinput>tl</userinput>."
msgstr ""
"<userinput>turnleft</userinput> commands the turtle to turn an amount of X "
"degrees to the left. <userinput>turnleft</userinput> can be abbreviated to "
"<userinput>tl</userinput>."

#. Tag: term
#: programming-reference.docbook:196
#, fuzzy, no-c-format
msgid "<term>turnright (tr)</term>"
msgstr "<term>go</term>"

#. Tag: primary
#: programming-reference.docbook:196
#, fuzzy, no-c-format
msgid "<primary>turnright (tr)</primary>"
msgstr "<term>go</term>"

#. Tag: screen
#: programming-reference.docbook:197
#, no-c-format
msgid "turnright X"
msgstr "turnright X"

#. Tag: para
#: programming-reference.docbook:197
#, fuzzy, no-c-format
#| msgid ""
#| "<userinput>turnright</userinput>the turtle to turn an amount of X degrees "
#| "to the right. <userinput>turnright</userinput> can be abbreviated to "
#| "<userinput>tr</userinput>."
msgid ""
"<userinput>turnright</userinput> the turtle to turn an amount of X degrees "
"to the right. <userinput>turnright</userinput> can be abbreviated to "
"<userinput>tr</userinput>."
msgstr ""
"<userinput>turnright</userinput>the turtle to turn an amount of X degrees to "
"the right. <userinput>turnright</userinput> can be abbreviated to "
"<userinput>tr</userinput>."

#. Tag: term
#: programming-reference.docbook:204
#, fuzzy, no-c-format
msgid "<term>direction (dir)</term>"
msgstr "<term>reset</term>"

#. Tag: primary
#: programming-reference.docbook:204
#, fuzzy, no-c-format
msgid "<primary>direction (dir)</primary>"
msgstr "<term>reset</term>"

#. Tag: screen
#: programming-reference.docbook:205
#, no-c-format
msgid "direction X"
msgstr "direction X"

#. Tag: para
#: programming-reference.docbook:205
#, no-c-format
msgid ""
"<userinput>direction</userinput> set the turtle's direction to an amount of "
"X degrees counting from zero, and thus is not relative to the turtle's "
"previous direction. <userinput>direction</userinput> can be abbreviated to "
"<userinput>dir</userinput>."
msgstr ""
"<userinput>direction</userinput> set the turtle's direction to an amount of "
"X degrees counting from zero, and thus is not relative to the turtle's "
"previous direction. <userinput>direction</userinput> can be abbreviated to "
"<userinput>dir</userinput>."

#. Tag: term
#: programming-reference.docbook:212
#, fuzzy, no-c-format
msgid "<term>getdirection</term>"
msgstr "<term>reset</term>"

#. Tag: primary
#: programming-reference.docbook:212
#, fuzzy, no-c-format
msgid "<primary>getdirection</primary>"
msgstr "<term>reset</term>"

#. Tag: screen
#: programming-reference.docbook:213
#, fuzzy, no-c-format
#| msgid "<screen>reset</screen>"
msgid "<screen>getdirection</screen>"
msgstr "<screen>reset</screen>"

#. Tag: para
#: programming-reference.docbook:213
#, fuzzy, no-c-format
#| msgid ""
#| "<userinput>direction</userinput> set the turtle's direction to an amount "
#| "of X degrees counting from zero, and thus is not relative to the turtle's "
#| "previous direction. <userinput>direction</userinput> can be abbreviated "
#| "to <userinput>dir</userinput>."
msgid ""
"<userinput>getdirection</userinput> returns the turtle's direction as an "
"amount of degrees counting from zero, where zero is the direction when the "
"turtle is pointing upwards."
msgstr ""
"<userinput>direction</userinput> set the turtle's direction to an amount of "
"X degrees counting from zero, and thus is not relative to the turtle's "
"previous direction. <userinput>direction</userinput> can be abbreviated to "
"<userinput>dir</userinput>."

#. Tag: term
#: programming-reference.docbook:220
#, no-c-format
msgid "<term>center</term>"
msgstr "<term>centre</term>"

#. Tag: primary
#: programming-reference.docbook:220
#, fuzzy, no-c-format
#| msgid "<term>center</term>"
msgid "<primary>center</primary>"
msgstr "<term>centre</term>"

#. Tag: screen
#: programming-reference.docbook:221
#, no-c-format
msgid "<screen>center</screen>"
msgstr "<screen>centre</screen>"

#. Tag: para
#: programming-reference.docbook:221
#, no-c-format
msgid ""
"<userinput>center</userinput> moves the turtle to the center on the canvas."
msgstr ""
"<userinput>centre</userinput> moves the turtle to the centre on the canvas."

#. Tag: term
#: programming-reference.docbook:228
#, no-c-format
msgid "<term>go</term>"
msgstr "<term>go</term>"

#. Tag: primary
#: programming-reference.docbook:228
#, fuzzy, no-c-format
#| msgid "<term>go</term>"
msgid "<primary>go</primary>"
msgstr "<term>go</term>"

#. Tag: screen
#: programming-reference.docbook:229
#, no-c-format
msgid "go X,Y"
msgstr "go X,Y"

#. Tag: para
#: programming-reference.docbook:229
#, fuzzy, no-c-format
#| msgid ""
#| "<userinput>go</userinput> commands the turtle to go to a certain place on "
#| "the canvas. This place is X <glossterm linkend=\"pixels\">pixels</"
#| "glossterm> from the left of the canvas, and Y <glossterm linkend=\"pixels"
#| "\">pixels</glossterm> form the top of the canvas. Note that using the "
#| "<userinput>go</userinput> command the turtle will not draw a line."
msgid ""
"<userinput>go</userinput> commands the turtle to go to a certain place on "
"the canvas. This place is X <glossterm linkend=\"pixels\">pixels</glossterm> "
"from the left of the canvas, and Y <glossterm linkend=\"pixels\">pixels</"
"glossterm> from the top of the canvas."
msgstr ""
"<userinput>go</userinput> commands the turtle to go to a certain place on "
"the canvas. This place is X <glossterm linkend=\"pixels\">pixels</glossterm> "
"from the left of the canvas, and Y <glossterm linkend=\"pixels\">pixels</"
"glossterm> form the top of the canvas. Note that using the <userinput>go</"
"userinput> command the turtle will not draw a line."

#. Tag: term
#: programming-reference.docbook:236
#, no-c-format
msgid "<term>gox</term>"
msgstr "<term>gox</term>"

#. Tag: primary
#: programming-reference.docbook:236
#, fuzzy, no-c-format
#| msgid "gox X"
msgid "gox (gx)"
msgstr "gox X"

#. Tag: screen
#: programming-reference.docbook:237
#, no-c-format
msgid "gox X"
msgstr "gox X"

#. Tag: para
#: programming-reference.docbook:237
#, fuzzy, no-c-format
#| msgid ""
#| "<userinput>gox</userinput> using this command the turtle will move to X "
#| "<glossterm linkend=\"pixels\">pixels</glossterm> from the left of the "
#| "canvas whilst staying at the same height."
msgid ""
"<userinput>gox</userinput> using this command the turtle will move to X "
"<glossterm linkend=\"pixels\">pixels</glossterm> from the left of the canvas "
"whilst staying at the same height. <userinput>gox</userinput> can be "
"abbreviated to <userinput>gx</userinput>."
msgstr ""
"<userinput>gox</userinput> using this command the turtle will move to X "
"<glossterm linkend=\"pixels\">pixels</glossterm> from the left of the canvas "
"whilst staying at the same height."

#. Tag: term
#: programming-reference.docbook:244
#, no-c-format
msgid "<term>goy</term>"
msgstr "<term>goy</term>"

#. Tag: primary
#: programming-reference.docbook:244
#, fuzzy, no-c-format
#| msgid "goy Y"
msgid "goy (gy)"
msgstr "goy Y"

#. Tag: screen
#: programming-reference.docbook:245
#, no-c-format
msgid "goy Y"
msgstr "goy Y"

#. Tag: para
#: programming-reference.docbook:245
#, fuzzy, no-c-format
#| msgid ""
#| "<userinput>gox</userinput> using this command the turtle will move to Y "
#| "<glossterm linkend=\"pixels\">pixels</glossterm> from the top of the "
#| "canvas whilst staying at the same distance from the left border of the "
#| "canvas."
msgid ""
"<userinput>goy</userinput> using this command the turtle will move to Y "
"<glossterm linkend=\"pixels\">pixels</glossterm> from the top of the canvas "
"whilst staying at the same distance from the left border of the canvas. "
"<userinput>goy</userinput> can be abbreviated to <userinput>gy</userinput>."
msgstr ""
"<userinput>gox</userinput> using this command the turtle will move to Y "
"<glossterm linkend=\"pixels\">pixels</glossterm> from the top of the canvas "
"whilst staying at the same distance from the left border of the canvas."

#. Tag: para
#: programming-reference.docbook:249
#, no-c-format
msgid ""
"Using the commands <userinput>go</userinput>, <userinput>gox</userinput>, "
"<userinput>goy</userinput> and <userinput>center</userinput> the turtle will "
"not draw a line, no matter if the pen is up or down."
msgstr ""

#. Tag: title
#: programming-reference.docbook:254
#, fuzzy, no-c-format
#| msgid "Moving the turtle"
msgid "Where is the turtle?"
msgstr "Moving the turtle"

#. Tag: para
#: programming-reference.docbook:255
#, fuzzy, no-c-format
#| msgid "There are several commands to move the turtle over the screen."
msgid ""
"There are two commands which return the position of the turtle on the screen."
msgstr "There are several commands to move the turtle over the screen."

#. Tag: term
#: programming-reference.docbook:260
#, fuzzy, no-c-format
#| msgid "<term>gox</term>"
msgid "<term>getx</term>"
msgstr "<term>gox</term>"

#. Tag: primary
#: programming-reference.docbook:260
#, no-c-format
msgid "<primary>getx</primary>"
msgstr ""

#. Tag: para
#: programming-reference.docbook:261
#, no-c-format
msgid ""
"<userinput>getx</userinput> returns the number of pixels from the left of "
"the canvas to the current position of the turtle."
msgstr ""

#. Tag: term
#: programming-reference.docbook:268
#, fuzzy, no-c-format
#| msgid "<term>goy</term>"
msgid "<term>gety</term>"
msgstr "<term>goy</term>"

#. Tag: primary
#: programming-reference.docbook:268
#, no-c-format
msgid "<primary>gety</primary>"
msgstr ""

#. Tag: para
#: programming-reference.docbook:269
#, no-c-format
msgid ""
"<userinput>gety</userinput> returns the number of pixels from the top of the "
"canvas to the current position of the turtle."
msgstr ""

#. Tag: title
#: programming-reference.docbook:276
#, no-c-format
msgid "The turtle has a pen"
msgstr "The turtle has a pen"

#. Tag: para
#: programming-reference.docbook:277
#, no-c-format
msgid ""
"The turtle has a pen that draws a line when the turtle moves. There are a "
"few commands to control the pen. In this section we explain these commands."
msgstr ""
"The turtle has a pen that draws a line when the turtle moves. There are a "
"few commands to control the pen. In this section we explain these commands."

#. Tag: term
#: programming-reference.docbook:281
#, fuzzy, no-c-format
#| msgid "<term>penup</term>"
msgid "<term>penup (pu)</term>"
msgstr "<term>penup</term>"

#. Tag: primary
#: programming-reference.docbook:281
#, no-c-format
msgid "<primary>penup (pu)</primary>"
msgstr ""

#. Tag: screen
#: programming-reference.docbook:282
#, no-c-format
msgid "penup"
msgstr ""

#. Tag: para
#: programming-reference.docbook:282
#, no-c-format
msgid ""
"<userinput>penup</userinput> lifts the pen from the canvas. When the pen is "
"<quote>up</quote> no line will be drawn when the turtle moves. See also "
"<userinput>pendown</userinput>. <userinput>penup</userinput> can be "
"abbreviated to <userinput>pu</userinput>."
msgstr ""
"<userinput>penup</userinput> lifts the pen from the canvas. When the pen is "
"<quote>up</quote> no line will be drawn when the turtle moves. See also "
"<userinput>pendown</userinput>. <userinput>penup</userinput> can be "
"abbreviated to <userinput>pu</userinput>."

#. Tag: term
#: programming-reference.docbook:289
#, fuzzy, no-c-format
#| msgid "<term>pendown</term>"
msgid "<term>pendown (pd)</term>"
msgstr "<term>pendown</term>"

#. Tag: primary
#: programming-reference.docbook:289
#, fuzzy, no-c-format
#| msgid "<term>pendown</term>"
msgid "<primary>pendown (pd)</primary>"
msgstr "<term>pendown</term>"

#. Tag: screen
#: programming-reference.docbook:290
#, no-c-format
msgid "pendown"
msgstr ""

#. Tag: para
#: programming-reference.docbook:290
#, fuzzy, no-c-format
msgid ""
"<userinput>pendown</userinput> presses the pen down on the canvas. When the "
"pen is press <quote>down</quote> on the canvas a line will be drawn when the "
"turtle moves. See also <userinput>penup</userinput>. <userinput>pendown</"
"userinput> can be abbreviated to <userinput>pd</userinput>."
msgstr ""
"<userinput>pendown</userinput> presses the pen down on the canvas. When the "
"pen is press <quote>down</quote> on the canvas a line will be drawn when the "
"turtle moves. See also <userinput>penup</userinput>.<userinput>pendown</"
"userinput> can be abbreviated to <userinput>pd</userinput>."

#. Tag: term
#: programming-reference.docbook:297
#, fuzzy, no-c-format
msgid "<term>penwidth (pw)</term>"
msgstr "<term>pendown</term>"

#. Tag: primary
#: programming-reference.docbook:297
#, fuzzy, no-c-format
msgid "<primary>penwidth (pw)</primary>"
msgstr "<term>pendown</term>"

#. Tag: screen
#: programming-reference.docbook:298
#, no-c-format
msgid "penwidth X"
msgstr "penwidth X"

#. Tag: para
#: programming-reference.docbook:298
#, no-c-format
msgid ""
"<userinput>penwidth</userinput> sets the width of the pen (the line width) "
"to an amount of X <glossterm linkend=\"pixels\">pixels</glossterm>. "
"<userinput>penwidth</userinput> can be abbreviated to <userinput>pw</"
"userinput>."
msgstr ""
"<userinput>penwidth</userinput> sets the width of the pen (the line width) "
"to an amount of X <glossterm linkend=\"pixels\">pixels</glossterm>. "
"<userinput>penwidth</userinput> can be abbreviated to <userinput>pw</"
"userinput>."

#. Tag: term
#: programming-reference.docbook:305
#, fuzzy, no-c-format
msgid "<term>pencolor (pc)</term>"
msgstr "<term>pendown</term>"

#. Tag: primary
#: programming-reference.docbook:305
#, fuzzy, no-c-format
msgid "<primary>pencolor (pc)</primary>"
msgstr "<term>pendown</term>"

#. Tag: screen
#: programming-reference.docbook:306
#, no-c-format
msgid "pencolor R,G,B"
msgstr "pencolour R,G,B"

#. Tag: para
#: programming-reference.docbook:306
#, no-c-format
msgid ""
"<userinput>pencolor</userinput> sets the color of the pen. "
"<userinput>pencolor</userinput> takes an <glossterm linkend=\"rgb\">RGB "
"combination</glossterm> as input. <userinput>pencolor</userinput> can be "
"abbreviated to <userinput>pc</userinput>."
msgstr ""
"<userinput>pencolour</userinput> sets the colour of the pen. "
"<userinput>pencolour</userinput> takes an <glossterm linkend=\"rgb\">RGB "
"combination</glossterm> as input. <userinput>pencolour</userinput> can be "
"abbreviated to <userinput>pc</userinput>."

#. Tag: title
#: programming-reference.docbook:313
#, no-c-format
msgid "Commands to control the canvas"
msgstr "Commands to control the canvas"

#. Tag: para
#: programming-reference.docbook:314
#, no-c-format
msgid "There are several commands to control the canvas."
msgstr "There are several commands to control the canvas."

#. Tag: term
#: programming-reference.docbook:318
#, fuzzy, no-c-format
msgid "<term>canvassize (cs)</term>"
msgstr "<term>centre</term>"

#. Tag: primary
#: programming-reference.docbook:318
#, fuzzy, no-c-format
msgid "<primary>canvassize (cs)</primary>"
msgstr "<term>centre</term>"

#. Tag: screen
#: programming-reference.docbook:319
#, no-c-format
msgid "canvassize X,Y"
msgstr "canvassize X,Y"

#. Tag: para
#: programming-reference.docbook:319
#, no-c-format
msgid ""
"With the <userinput>canvassize</userinput> command you can set the size of "
"the canvas. It takes X and Y as input, where X is the new canvas width in "
"<glossterm linkend=\"pixels\">pixels</glossterm>, and Y is the new height of "
"the canvas in <glossterm linkend=\"pixels\">pixels</glossterm>. "
"<userinput>canvassize</userinput> can be abbreviated to <userinput>cs</"
"userinput>."
msgstr ""
"With the <userinput>canvassize</userinput> command you can set the size of "
"the canvas. It takes X and Y as input, where X is the new canvas width in "
"<glossterm linkend=\"pixels\">pixels</glossterm>, and Y is the new height of "
"the canvas in <glossterm linkend=\"pixels\">pixels</glossterm>. "
"<userinput>canvassize</userinput> can be abbreviated to <userinput>cs</"
"userinput>."

#. Tag: term
#: programming-reference.docbook:326
#, fuzzy, no-c-format
msgid "<term>canvascolor (cc)</term>"
msgstr "<term>clear</term>"

#. Tag: primary
#: programming-reference.docbook:326
#, fuzzy, no-c-format
msgid "<primary>canvascolor (cc)</primary>"
msgstr "<term>clear</term>"

#. Tag: screen
#: programming-reference.docbook:327
#, no-c-format
msgid "canvascolor R,G,B"
msgstr "canvascolour R,G,B"

#. Tag: para
#: programming-reference.docbook:327
#, no-c-format
msgid ""
"<userinput>canvascolor</userinput> set the color of the canvas. "
"<userinput>canvascolor</userinput> takes an <glossterm linkend=\"rgb\">RGB "
"combination</glossterm> as input. <userinput>canvascolor</userinput> can be "
"abbreviated to <userinput>cc</userinput>."
msgstr ""
"<userinput>canvascolour</userinput> set the colour of the canvas. "
"<userinput>canvascolour</userinput> takes an <glossterm linkend=\"rgb\">RGB "
"combination</glossterm> as input. <userinput>canvascolour</userinput> can be "
"abbreviated to <userinput>cc</userinput>."

#. Tag: title
#: programming-reference.docbook:334
#, no-c-format
msgid "Commands to clean up"
msgstr "Commands to clean up"

#. Tag: para
#: programming-reference.docbook:335
#, no-c-format
msgid ""
"There are two commands to clean up the canvas after you have made a mess."
msgstr ""
"There are two commands to clean up the canvas after you have made a mess."

#. Tag: term
#: programming-reference.docbook:339
#, fuzzy, no-c-format
#| msgid "<term>clear</term>"
msgid "<term>clear (ccl)</term>"
msgstr "<term>clear</term>"

#. Tag: primary
#: programming-reference.docbook:339
#, no-c-format
msgid "<primary>clear (ccl)</primary>"
msgstr ""

#. Tag: screen
#: programming-reference.docbook:340
#, no-c-format
msgid "clear"
msgstr ""

#. Tag: para
#: programming-reference.docbook:340
#, fuzzy, no-c-format
msgid ""
"With <userinput>clear</userinput> you can clean all drawings from the "
"canvas. All other things remain: the position and angle of the turtle, the "
"canvascolor, the visibility of the turtle, and the canvas size."
msgstr ""
"With <userinput>clear</userinput> you can clean all drawings from the "
"canvas. All other things remain: the position and angle of the turtle, the "
"canvascolour, the visibility of the turtle and the canvas size. "
"<userinput>clear</userinput> can be abbreviated to <userinput>ccl</"
"userinput>."

#. Tag: term
#: programming-reference.docbook:347
#, no-c-format
msgid "<term>reset</term>"
msgstr "<term>reset</term>"

#. Tag: primary
#: programming-reference.docbook:347
#, fuzzy, no-c-format
#| msgid "<term>reset</term>"
msgid "<primary>reset</primary>"
msgstr "<term>reset</term>"

#. Tag: screen
#: programming-reference.docbook:348
#, no-c-format
msgid "<screen>reset</screen>"
msgstr "<screen>reset</screen>"

#. Tag: para
#: programming-reference.docbook:348
#, fuzzy, no-c-format
#| msgid ""
#| "<userinput>reset</userinput> cleans much more thoroughly than the "
#| "<userinput>clear</userinput> command. After a <userinput>reset</"
#| "userinput> command everything is like is was when you had just started "
#| "&kturtle;. The turtle is positioned at the middle of the screen, the "
#| "canvas color is white, and the turtle draws a black line on the canvas."
msgid ""
"<userinput>reset</userinput> cleans much more thoroughly than the "
"<userinput>clear</userinput> command. After a <userinput>reset</userinput> "
"command everything is like is was when you had just started &kturtle;. The "
"turtle is positioned at the middle of the screen, the canvas color is white, "
"the turtle draws a black line on the canvas and the canvassize is set to 400 "
"x 400 pixels."
msgstr ""
"<userinput>reset</userinput> cleans much more thoroughly than the "
"<userinput>clear</userinput> command. After a <userinput>reset</userinput> "
"command everything is like is was when you had just started &kturtle;. The "
"turtle is positioned at the middle of the screen, the canvas colour is "
"white, and the turtle draws a black line on the canvas."

#. Tag: title
#: programming-reference.docbook:355
#, no-c-format
msgid "The turtle is a sprite"
msgstr "The turtle is a sprite"

#. Tag: para
#: programming-reference.docbook:356
#, fuzzy, no-c-format
msgid ""
"First a brief explanation of what sprites are: sprites are small pictures "
"that can be moved around the screen, like we often see in computer games. "
"Our turtle is also a sprite. For more info see the glossary on <glossterm "
"linkend=\"sprites\">sprites</glossterm>."
msgstr ""
"Many people do not know what sprites are, so here a short explanation: "
"sprites are small pictures that can be moved around the screen. (for more "
"info see the glossary on <glossterm linkend=\"sprites\">sprites</"
"glossterm>). So the turtle is a sprite."

#. Tag: para
#: programming-reference.docbook:357
#, no-c-format
msgid ""
"Next you will find a full overview on all commands to work with sprites."
msgstr ""
"Next you will find a full overview on all commands to work with sprites."

#. Tag: para
#: programming-reference.docbook:358
#, no-c-format
msgid ""
"[The current version of &kturtle; does not yet support the use of sprites "
"other than the turtle. With future versions you will be able to change the "
"turtle into something of your own design]"
msgstr ""
"[The current version of &kturtle; does not yet support the use of sprites "
"other than the turtle. With future versions you will be able to change the "
"turtle into something of your own design]"

#. Tag: term
#: programming-reference.docbook:362
#, fuzzy, no-c-format
msgid "<term>spriteshow (ss)</term>"
msgstr "<term>if</term>"

#. Tag: primary
#: programming-reference.docbook:362
#, no-c-format
msgid "<primary>spriteshow (ss)</primary>"
msgstr ""

#. Tag: screen
#: programming-reference.docbook:363
#, no-c-format
msgid "spriteshow"
msgstr ""

#. Tag: para
#: programming-reference.docbook:363
#, fuzzy, no-c-format
msgid ""
"<userinput>spriteshow</userinput> makes the turtle visible again after it "
"has been hidden. <userinput>spriteshow</userinput> can be abbreviated to "
"<userinput>ss</userinput>."
msgstr ""
"<userinput>show</userinput> makes the turtle visible again after it has been "
"hidden.<userinput>show</userinput> can be abbreviated to <userinput>ss</"
"userinput>."

#. Tag: term
#: programming-reference.docbook:370
#, fuzzy, no-c-format
#| msgid "<term>hide</term>"
msgid "<term>spritehide (sh)</term>"
msgstr "<term>hide</term>"

#. Tag: primary
#: programming-reference.docbook:370
#, no-c-format
msgid "<primary>spritehide (sh)</primary>"
msgstr ""

#. Tag: screen
#: programming-reference.docbook:371
#, no-c-format
msgid "spritehide"
msgstr ""

#. Tag: para
#: programming-reference.docbook:371
#, fuzzy, no-c-format
msgid ""
"<userinput>spritehide</userinput> hides the turtle. This can be used if the "
"turtle does not fit in your drawing. <userinput>spritehide</userinput> can "
"be abbreviated to <userinput>sh</userinput>."
msgstr ""
"<userinput>hide</userinput> hides the turtle. This can be used if the turtle "
"does not fit in your drawing.<userinput>hide</userinput> can be abbreviated "
"to <userinput>sh</userinput>."

#. Tag: title
#: programming-reference.docbook:378
#, fuzzy, no-c-format
msgid "Can the turtle write?"
msgstr "Can the turtles write text?"

#. Tag: para
#: programming-reference.docbook:379
#, no-c-format
msgid ""
"The answer is: <quote>yes</quote>. The turtle can write: it writes just "
"about everything you command it to."
msgstr ""
"The answer is: <quote>yes</quote>. The turtle can write: it writes just "
"about everything you command it to."

#. Tag: term
#: programming-reference.docbook:383
#, fuzzy, no-c-format
msgid "<term>print</term>"
msgstr "<term>if</term>"

#. Tag: primary
#: programming-reference.docbook:383
#, fuzzy, no-c-format
msgid "<primary>print</primary>"
msgstr "<term>if</term>"

#. Tag: screen
#: programming-reference.docbook:384
#, no-c-format
msgid "print X"
msgstr "print X"

#. Tag: para
#: programming-reference.docbook:384
#, no-c-format
msgid ""
"The <userinput>print</userinput> command is used to command the turtle to "
"write something on the canvas. <userinput>print</userinput> takes numbers "
"and strings as input. You can <userinput>print</userinput> various numbers "
"and strings using the <quote>+</quote> symbol. See here a small example:"
msgstr ""
"The <userinput>print</userinput> command is used to command the turtle to "
"write something on the canvas. <userinput>print</userinput> takes numbers "
"and strings as input. You can <userinput>print</userinput> various numbers "
"and strings using the <quote>+</quote> symbol. See here a small example:"

#. Tag: screen
#: programming-reference.docbook:386
#, fuzzy, no-c-format
msgid ""
"$year = 2003\n"
"$author = \"Cies\"\n"
"print $author + \" started the KTurtle project in \" + $year + \" and still "
"enjoys working on it!\""
msgstr ""
"year = 2004\n"
"author = \"Cies\"\n"
"print \"KTurtle was made in \" + year + \" by \" + author"

#. Tag: term
#: programming-reference.docbook:393
#, fuzzy, no-c-format
msgid "<term>fontsize</term>"
msgstr "<term>for</term>"

#. Tag: primary
#: programming-reference.docbook:393
#, fuzzy, no-c-format
msgid "<primary>fontsize</primary>"
msgstr "<term>for</term>"

#. Tag: screen
#: programming-reference.docbook:394
#, no-c-format
msgid "fontsize X"
msgstr "fontsize X"

#. Tag: para
#: programming-reference.docbook:394
#, no-c-format
msgid ""
"<userinput>fontsize</userinput> sets the size of the font that is used by "
"<userinput>print</userinput>. <userinput>fontsize</userinput> takes one "
"input which should be a number. The size is set in <glossterm linkend="
"\"pixels\">pixels</glossterm>."
msgstr ""
"<userinput>fontsize</userinput> sets the size of the font that is used by "
"<userinput>print</userinput>. <userinput>fontsize</userinput> takes one "
"input which should be a number. The size is set in <glossterm linkend="
"\"pixels\">pixels</glossterm>."

#. Tag: title
#: programming-reference.docbook:401
#, no-c-format
msgid "Mathematical commands"
msgstr ""

#. Tag: para
#: programming-reference.docbook:402
#, no-c-format
msgid ""
"The following commands are &kturtle;'s more advanced mathematical commands."
msgstr ""

#. Tag: term
#: programming-reference.docbook:406
#, fuzzy, no-c-format
#| msgid "<term>go</term>"
msgid "<term>round</term>"
msgstr "<term>go</term>"

#. Tag: primary
#: programming-reference.docbook:406
#, fuzzy, no-c-format
#| msgid "<term>show</term>"
msgid "<primary>round</primary>"
msgstr "<term>show</term>"

#. Tag: screen
#: programming-reference.docbook:407
#, no-c-format
msgid "round(x)"
msgstr ""

#. Tag: para
#: programming-reference.docbook:407
#, no-c-format
msgid ""
"<userinput>round</userinput> the given number to the nearest integer. "
"<screen>\n"
"print round(10.8)\n"
"forward 20\n"
"print round(10.3)\n"
"</screen> With this code the turtle will print the numbers 11 and 10."
msgstr ""

#. Tag: term
#: programming-reference.docbook:416
#, fuzzy, no-c-format
#| msgid "<term>wrapon</term>"
msgid "<term>random (rnd)</term>"
msgstr "<term>wrapon</term>"

#. Tag: primary
#: programming-reference.docbook:416
#, no-c-format
msgid "<primary>random (rnd)</primary>"
msgstr ""

#. Tag: screen
#: programming-reference.docbook:417
#, no-c-format
msgid "random X,Y"
msgstr "random X,Y"

#. Tag: para
#: programming-reference.docbook:417
#, fuzzy, no-c-format
#| msgid ""
#| "<userinput>random</userinput> is a command that takes input and gives "
#| "output. As input are required two numbers, the first (X) sets the minimum "
#| "output, the second (Y) sets the maximum. The output is a randomly chosen "
#| "number that is equal or greater then the minimum and equal or smaller "
#| "than the maximum. Here a small example: <screen>\n"
#| "repeat 500 [\n"
#| "  x = random 1,20\n"
#| "  forward x\n"
#| "  turnleft 10 - x\n"
#| "]\n"
#| "</screen> Using the <userinput>random</userinput> command you can add a "
#| "bit of chaos to your program."
msgid ""
"<userinput>random</userinput> is a command that takes input and gives "
"output. As input are required two numbers, the first (X) sets the minimum "
"output, the second (Y) sets the maximum. The output is a randomly chosen "
"number that is equal or greater than the minimum and equal or smaller than "
"the maximum. Here a small example: <screen>\n"
"repeat 500 {\n"
"  $x = random 1,20\n"
"  forward $x\n"
"  turnleft 10 - $x\n"
"}\n"
"</screen> Using the <userinput>random</userinput> command you can add a bit "
"of chaos to your program."
msgstr ""
"<userinput>random</userinput> is a command that takes input and gives "
"output. As input are required two numbers, the first (X) sets the minimum "
"output, the second (Y) sets the maximum. The output is a randomly chosen "
"number that is equal or greater then the minimum and equal or smaller than "
"the maximum. Here a small example: <screen>\n"
"repeat 500 [\n"
"  x = random 1,20\n"
"  forward x\n"
"  turnleft 10 - x\n"
"]\n"
"</screen> Using the <userinput>random</userinput> command you can add a bit "
"of chaos to your program."

#. Tag: term
#: programming-reference.docbook:426
#, fuzzy, no-c-format
#| msgid "<term>go</term>"
msgid "<term>mod</term>"
msgstr "<term>go</term>"

#. Tag: primary
#: programming-reference.docbook:426
#, fuzzy, no-c-format
#| msgid "<term>go</term>"
msgid "<primary>mod</primary>"
msgstr "<term>go</term>"

#. Tag: screen
#: programming-reference.docbook:427
#, fuzzy, no-c-format
#| msgid "go X,Y"
msgid "mod X,Y"
msgstr "go X,Y"

#. Tag: para
#: programming-reference.docbook:427
#, no-c-format
msgid ""
"The <userinput>mod</userinput> returns remainder of the division of first "
"number by the second number."
msgstr ""

#. Tag: term
#: programming-reference.docbook:434
#, fuzzy, no-c-format
#| msgid "<term>reset</term>"
msgid "<term>sqrt</term>"
msgstr "<term>reset</term>"

#. Tag: primary
#: programming-reference.docbook:434
#, fuzzy, no-c-format
#| msgid "<term>for</term>"
msgid "<primary>sqrt</primary>"
msgstr "<term>for</term>"

#. Tag: screen
#: programming-reference.docbook:435
#, fuzzy, no-c-format
#| msgid "print X"
msgid "sqrt X"
msgstr "print X"

#. Tag: para
#: programming-reference.docbook:435
#, no-c-format
msgid ""
"The <userinput>sqrt</userinput> command is sued to find the square root of a "
"number, X."
msgstr ""

#. Tag: term
#: programming-reference.docbook:452
#, fuzzy, no-c-format
#| msgid "<term>if</term>"
msgid "<term>pi</term>"
msgstr "<term>if</term>"

#. Tag: primary
#: programming-reference.docbook:452
#, no-c-format
msgid "<primary>pi</primary>"
msgstr ""

#. Tag: screen
#: programming-reference.docbook:453
#, fuzzy, no-c-format
#| msgid "<screen>reset</screen>"
msgid "<screen>pi</screen>"
msgstr "<screen>reset</screen>"

#. Tag: para
#: programming-reference.docbook:453
#, no-c-format
msgid "This command returns the constant Pi, <userinput>3.14159</userinput>."
msgstr ""

#. Tag: term
#: programming-reference.docbook:462
#, no-c-format
msgid ""
"sin<indexterm><primary>sin</primary></indexterm>, "
"cos<indexterm><primary>cos</primary></indexterm>, tan"
msgstr ""

#. Tag: primary
#: programming-reference.docbook:462
#, fuzzy, no-c-format
#| msgid "<term>show</term>"
msgid "<primary>tan</primary>"
msgstr "<term>show</term>"

#. Tag: screen
#: programming-reference.docbook:464
#, no-c-format
msgid ""
"sin X\n"
"cos X\n"
"tan X"
msgstr ""

#. Tag: para
#: programming-reference.docbook:464
#, no-c-format
msgid ""
"These three commands represent the world famous trigoniometrical functions "
"<userinput>sin</userinput>, <userinput>cos</userinput> and <userinput>tan</"
"userinput>. The input argument of these commands, X, is a <link linkend="
"\"number\">number</link>."
msgstr ""

#. Tag: term
#: programming-reference.docbook:473
#, no-c-format
msgid ""
"arcsin<indexterm><primary>arcsin</primary></indexterm>, "
"arccos<indexterm><primary>arccos</primary></indexterm>, arctan"
msgstr ""

#. Tag: primary
#: programming-reference.docbook:473
#, no-c-format
msgid "arctan"
msgstr ""

#. Tag: screen
#: programming-reference.docbook:475
#, no-c-format
msgid ""
"arcsin X\n"
"arccos X\n"
"arctan X"
msgstr ""

#. Tag: para
#: programming-reference.docbook:475
#, no-c-format
msgid ""
"These commands are the inverse functions of <link linkend=\"sin\">sin</"
"link>, <link linkend=\"cos\">cos</link> and <link linkend=\"tan\">tan</"
"link>. The input argument of these commands, X, is a <link linkend=\"number"
"\">number</link>."
msgstr ""

#. Tag: title
#: programming-reference.docbook:482
#, no-c-format
msgid "Input and feedback through dialogs"
msgstr ""

#. Tag: para
#: programming-reference.docbook:483
#, no-c-format
msgid ""
"A dialog is a small pop-up window that provides some feedback or asks for "
"some input. &kturtle; has two commands for dialogs, namely: "
"<userinput>message</userinput> and <userinput>ask</userinput>"
msgstr ""

#. Tag: term
#: programming-reference.docbook:487
#, fuzzy, no-c-format
msgid "<term>message</term>"
msgstr "<term>reset</term>"

#. Tag: primary
#: programming-reference.docbook:487
#, fuzzy, no-c-format
msgid "<primary>message</primary>"
msgstr "<term>reset</term>"

#. Tag: screen
#: programming-reference.docbook:488
#, no-c-format
msgid "message X"
msgstr ""

#. Tag: para
#: programming-reference.docbook:488
#, no-c-format
msgid ""
"The <userinput>message</userinput> command takes a <link linkend=\"string"
"\">string</link> as input. It shows a pop-up dialog containing the text from "
"the <link linkend=\"string\">string</link>."
msgstr ""

#. Tag: screen
#: programming-reference.docbook:490
#, fuzzy, no-c-format
msgid ""
"message \"Cies started KTurtle in 2003 and still enjoys working on it!\""
msgstr ""
"year = 2004\n"
"author = \"Cies\"\n"
"print \"KTurtle was made in \" + year + \" by \" + author"

#. Tag: term
#: programming-reference.docbook:497
#, fuzzy, no-c-format
#| msgid "<term>show</term>"
msgid "<term>ask</term>"
msgstr "<term>show</term>"

#. Tag: primary
#: programming-reference.docbook:497
#, fuzzy, no-c-format
#| msgid "<term>show</term>"
msgid "<primary>ask</primary>"
msgstr "<term>show</term>"

#. Tag: screen
#: programming-reference.docbook:498
#, no-c-format
msgid "ask X"
msgstr ""

#. Tag: para
#: programming-reference.docbook:498
#, no-c-format
msgid ""
"<userinput>ask</userinput> takes a <link linkend=\"string\">string</link> as "
"input. It shows this string in a pop-up dialog (similar to <link linkend="
"\"message\">message</link>), along with an input field. After the user has "
"entered a <link linkend=\"number\">number</link> or a <link linkend=\"string"
"\">string</link> into this, the result can be stored in a <link linkend="
"\"assignment-of-variables\">variable</link> or passed as an argument to a "
"<link linkend=\"commands\">command</link>. For example: <screen>\n"
"$in = ask \"What is your year of birth?\"\n"
"$out = 2003 - $in\n"
"print \"In 2003 you were \" + $out + \" years old at some point.\"\n"
"</screen> If the user cancels the input dialog, or does not enter anything "
"at all, the <link linkend=\"assignment-of-variables\">variable</link> is "
"empty."
msgstr ""

#. Tag: title
#: programming-reference.docbook:511
#, no-c-format
msgid "Assignment of variables"
msgstr ""

#. Tag: para
#: programming-reference.docbook:512
#, no-c-format
msgid ""
"First we have a look at variables, then we look at assigning values to those "
"variables."
msgstr ""

#. Tag: para
#: programming-reference.docbook:516
#, no-c-format
msgid ""
"Variables are words that start with a <quote>$</quote>, in the <link linkend="
"\"the-editor\">editor</link> they are <glossterm>highlighted</glossterm> "
"with purple."
msgstr ""

#. Tag: para
#: programming-reference.docbook:518
#, no-c-format
msgid ""
"Variables can contain any <link linkend=\"number\">number</link>, <link "
"linkend=\"string\">string</link> or <link linkend=\"boolean-value\">boolean "
"(true/false) value</link>. Using the assignment, <userinput>=</userinput>, a "
"variable is given its content. It will keep that content until the program "
"finishes executing or until the variable is reassigned to something else."
msgstr ""

#. Tag: para
#: programming-reference.docbook:520
#, no-c-format
msgid ""
"You can use variables, once assigned, just as if they are their content. For "
"instance in the following piece of &turtlescript;: <screen>\n"
"$x = 10\n"
"$x = $x / 3\n"
"print $x\n"
"</screen> First the variable <userinput>$x</userinput> is assigned to "
"<userinput>10</userinput>. Then <userinput>$x</userinput> is reassigned to "
"itself divided by <userinput>3</userinput> &mdash; this effectively means "
"<userinput>$x</userinput> is reassigned to product of <userinput>10 / 3</"
"userinput>. Finally <userinput>$x</userinput> is printed. In line two and "
"three you see that <userinput>$x</userinput> is used as if it is its "
"contents."
msgstr ""

#. Tag: para
#: programming-reference.docbook:524
#, fuzzy, no-c-format
msgid ""
"Variables have to be assigned in order to be used. For example: <screen>\n"
"print $n\n"
"</screen> Will result in an error message."
msgstr ""
"Containers that are not used yet are 0 by default. An example: <screen>\n"
"print N\n"
"</screen> This will print a 0."

#. Tag: para
#: programming-reference.docbook:528
#, fuzzy, no-c-format
msgid ""
"Please consider the following piece of &turtlescript;: <screen>\n"
"$a = 2004\n"
"$b = 25\n"
"\n"
"# the next command prints \"2029\"\n"
"print $a + $b\n"
"backward 30\n"
"# the next command prints \"2004 plus 25 equals 2029\"\n"
"print $a + \" plus \" + $b + \" equals \" + ($a + $b)\n"
"</screen> In the first two lines the variables <userinput>$a</userinput> and "
"<userinput>$b</userinput> are set to 2004 and 25. Then in two "
"<userinput>print</userinput> commands with a <userinput>backward 30</"
"userinput> in between are executed. The comments before the "
"<userinput>print</userinput> commands explain what they are doing. The "
"command <userinput>backward 30</userinput> is there to make sure every "
"output is on a new line. As you see variables can be used just as if their "
"where what they contain, you can use them with any kind of <link linkend="
"\"operators\">operators</link> or give them as input when invoking <link "
"linkend=\"commands\">commands</link>."
msgstr ""
"That was easy, now a bit harder example: <screen>\n"
"A = 2004\n"
"B = 25\n"
"AB = A + B\n"
"\n"
"# the next command prints \"2029\"\n"
"print AB\n"
"backward 30\n"
"# the next command prints \"2004 plus 25\"\n"
"print \"\" +  A + \" plus \" + B\n"
"backward 30\n"
"# the next command prints \"1979\"\n"
"print A - B\n"
"</screen> In the first two lines the variables <userinput>A</userinput> and "
"<userinput>B</userinput> are set to 2004 and 25. On the third line the "
"variable <userinput>AB</userinput> is set to <userinput>A + B</userinput>, "
"which is 2029. The rest of the example consists of 3 <userinput>print</"
"userinput> commands with <userinput>backward 30</userinput> in between. The "
"<userinput>backward 30</userinput> is there to make sure every output is on "
"a new line. In this example you also see that variables can be used in <link "
"linkend=\"math\">mathematical calculations</link>."

#. Tag: para
#: programming-reference.docbook:534
#, no-c-format
msgid ""
"One more example: <screen>\n"
"$name = ask \"What is your name?\"\n"
"print \"Hi \" + $name + \"! Good luck while learning the art of "
"programming...\"\n"
"</screen> Pretty straight forward. Again you can see that the variable "
"<userinput>$name</userinput>, treated just like a string."
msgstr ""

#. Tag: para
#: programming-reference.docbook:538
#, no-c-format
msgid ""
"When using variables the <link linkend=\"the-inspector\">inspector</link> is "
"very helpful. It shows you the contents of all variables that are currently "
"in use."
msgstr ""

#. Tag: title
#: programming-reference.docbook:544
#, no-c-format
msgid "Controlling execution"
msgstr "Controlling execution"

#. Tag: para
#: programming-reference.docbook:545
#, no-c-format
msgid ""
"The execution controllers enable you &mdash; as their name implies &mdash; "
"to control execution."
msgstr ""
"The execution controllers enable you &mdash; as their name implies &mdash; "
"to control execution."

#. Tag: para
#: programming-reference.docbook:546
#, no-c-format
msgid ""
"Execution controlling commands are <glossterm>highlighted</glossterm> with "
"dark green in a bold font type. The brackets are mostly used together with "
"execution controllers and they are <glossterm>highlighted</glossterm> with "
"black."
msgstr ""

#. Tag: title
#: programming-reference.docbook:549
#, no-c-format
msgid "Have the turtle wait"
msgstr "Have the turtle wait"

#. Tag: para
#: programming-reference.docbook:550
#, no-c-format
msgid ""
"If you have done some programming in &kturtle; you have might noticed that "
"the turtle can be very quick at drawing. This command makes the turtle wait "
"for a given amount of time."
msgstr ""
"If you have done some programming in &kturtle; you have might noticed that "
"the turtle can be very quick at drawing. This command makes the turtle wait "
"for a given amount of time."

#. Tag: term
#: programming-reference.docbook:553
#, fuzzy, no-c-format
#| msgid "<term>if</term>"
msgid "<term>wait</term>"
msgstr "<term>if</term>"

#. Tag: primary
#: programming-reference.docbook:553
#, no-c-format
msgid "<primary>wait</primary>"
msgstr ""

#. Tag: screen
#: programming-reference.docbook:554
#, no-c-format
msgid "wait X"
msgstr "wait X"

#. Tag: para
#: programming-reference.docbook:554
#, fuzzy, no-c-format
#| msgid ""
#| "<userinput>wait</userinput> makes the turtle wait for X seconds. "
#| "<screen>\n"
#| "repeat 36 [\n"
#| "  forward 5\n"
#| "  turnright 10\n"
#| "  wait 0.5\n"
#| "]\n"
#| "</screen> This code draws a circle, but the turtle will wait half a "
#| "second after each step. This gives the impression of a slow-moving turtle."
msgid ""
"<userinput>wait</userinput> makes the turtle wait for X seconds. <screen>\n"
"repeat 36 {\n"
"  forward 5\n"
"  turnright 10\n"
"  wait 0.5\n"
"}\n"
"</screen> This code draws a circle, but the turtle will wait half a second "
"after each step. This gives the impression of a slow-moving turtle."
msgstr ""
"<userinput>wait</userinput> makes the turtle wait for X seconds. <screen>\n"
"repeat 36 [\n"
"  forward 5\n"
"  turnright 10\n"
"  wait 0.5\n"
"]\n"
"</screen> This code draws a circle, but the turtle will wait half a second "
"after each step. This gives the impression of a slow-moving turtle."

#. Tag: title
#: programming-reference.docbook:564
#, no-c-format
msgid "Execute \"if\""
msgstr "Execute \"if\""

#. Tag: term
#: programming-reference.docbook:567
#, no-c-format
msgid "<term>if</term>"
msgstr "<term>if</term>"

#. Tag: primary
#: programming-reference.docbook:567
#, fuzzy, no-c-format
#| msgid "<term>if</term>"
msgid "<primary>if</primary>"
msgstr "<term>if</term>"

#. Tag: screen
#: programming-reference.docbook:568
#, fuzzy, no-c-format
#| msgid "if <link linkend=\"questions\">question</link> [ ... ]"
msgid "if <link linkend=\"boolean-value\">boolean</link> { ... }"
msgstr "if <link linkend=\"questions\">question</link> [ ... ]"

#. Tag: para
#: programming-reference.docbook:568
#, fuzzy, no-c-format
#| msgid ""
#| "The code that is placed between the brackets will only be executed "
#| "<userinput>if</userinput> the answer to the <link linkend=\"questions"
#| "\">question</link> is <quote>true</quote>. Please read for more "
#| "information on <link linkend=\"questions\">questions</link> in the <link "
#| "linkend=\"questions\">question section</link>. <screen>\n"
#| "x = 6\n"
#| "if x &gt; 5 [\n"
#| "  print \"x is greater than five!\"\n"
#| "]\n"
#| "</screen> On the first line <userinput>x</userinput> is set to 6. On the "
#| "second line the <link linkend=\"questions\">question</link> <userinput>x "
#| "&gt; 5</userinput> is asked. Since the answer to this question is "
#| "<quote>true</quote> the execution controller <userinput>if</userinput> "
#| "will allow the code between the brackets to be executed"
msgid ""
"The code that is placed between the brackets will only be executed "
"<userinput>if</userinput> the <link linkend=\"boolean-value\">boolean value</"
"link> evaluates <quote>true</quote>. <screen>\n"
"$x = 6\n"
"if $x &gt; 5 {\n"
"  print \"$x is greater than five!\"\n"
"}\n"
"</screen> On the first line <userinput>$x</userinput> is set to 6. On the "
"second line a <link linkend=\"comparing-operators\">comparing operator</"
"link> is used to evaluate <userinput>$x &gt; 5</userinput>. Since this "
"evaluates <quote>true</quote>, 6 is larger than 5, the execution controller "
"<userinput>if</userinput> will allow the code between the brackets to be "
"executed."
msgstr ""
"The code that is placed between the brackets will only be executed "
"<userinput>if</userinput> the answer to the <link linkend=\"questions"
"\">question</link> is <quote>true</quote>. Please read for more information "
"on <link linkend=\"questions\">questions</link> in the <link linkend="
"\"questions\">question section</link>. <screen>\n"
"x = 6\n"
"if x &gt; 5 [\n"
"  print \"x is greater than five!\"\n"
"]\n"
"</screen> On the first line <userinput>x</userinput> is set to 6. On the "
"second line the <link linkend=\"questions\">question</link> <userinput>x "
"&gt; 5</userinput> is asked. Since the answer to this question is "
"<quote>true</quote> the execution controller <userinput>if</userinput> will "
"allow the code between the brackets to be executed"

#. Tag: title
#: programming-reference.docbook:577
#, no-c-format
msgid "If not, in other words: \"else\""
msgstr "If not, in other words: \"else\""

#. Tag: term
#: programming-reference.docbook:580
#, fuzzy, no-c-format
#| msgid "<term>reset</term>"
msgid "<term>else</term>"
msgstr "<term>reset</term>"

#. Tag: primary
#: programming-reference.docbook:580
#, no-c-format
msgid "<primary>else</primary>"
msgstr ""

#. Tag: screen
#: programming-reference.docbook:581
#, fuzzy, no-c-format
#| msgid "if <link linkend=\"questions\">question</link> [ ... ]"
msgid "if <link linkend=\"boolean-value\">boolean</link> { ... } else { ... }"
msgstr "if <link linkend=\"questions\">question</link> [ ... ]"

#. Tag: para
#: programming-reference.docbook:581
#, fuzzy, no-c-format
msgid ""
"<userinput>else</userinput> can be used in addition to the execution "
"controller <link linkend=\"if\"><userinput>if</userinput></link>. The code "
"between the brackets after <userinput>else</userinput> is only executed if "
"the <link linkend=\"boolean-value\">boolean</link> evaluates <quote>false</"
"quote>. <screen>\n"
"reset\n"
"$x = 4\n"
"if $x &gt; 5 {\n"
"  print \"$x is greater than five!\"\n"
"} else {\n"
"  print \"$x is smaller than six!\"\n"
"}\n"
"</screen> The <link linkend=\"comparing-operators\">comparing operator</"
"link> evaluates the expression <userinput>$x &gt; 5</userinput>. Since 4 is "
"not greater than 5 the expression evaluates <quote>false</quote>. This means "
"the code between the brackets after <userinput>else</userinput> gets "
"executed."
msgstr ""
"<userinput>else</userinput> can be used in addition to the execution "
"controller <link linkend=\"if\"><userinput>if</userinput></link>. The code "
"between the brackets after <userinput>else</userinput> is only executed if "
"the answer to the <link linkend=\"questions\">question</link> that is asked "
"is <quote>false</quote>. <screen>\n"
"x = 4\n"
"if x &gt; 5 [\n"
"  print \"x is greater than five!\"\n"
"] else [\n"
"  print \"x is smaller than six!\"\n"
"]\n"
"</screen> The <link linkend=\"questions\">question</link> asks if "
"<userinput>x</userinput> is greater than 5. Since <userinput>x</userinput> "
"is set to 4 on the first line the answer to the question is <quote>false</"
"quote>. This means the code between the brackets after <userinput>else</"
"userinput> gets executed."

#. Tag: title
#: programming-reference.docbook:590
#, fuzzy, no-c-format
msgid "The \"while\" loop"
msgstr "The \"for\" loop"

#. Tag: term
#: programming-reference.docbook:593
#, fuzzy, no-c-format
#| msgid "<term>hide</term>"
msgid "<term>while</term>"
msgstr "<term>hide</term>"

#. Tag: primary
#: programming-reference.docbook:593
#, no-c-format
msgid "<primary>while</primary>"
msgstr ""

#. Tag: screen
#: programming-reference.docbook:594
#, fuzzy, no-c-format
#| msgid "while <link linkend=\"questions\">question</link> [ ... ]"
msgid "while <link linkend=\"boolean-value\">boolean</link> { ... }"
msgstr "while <link linkend=\"questions\">question</link> [ ... ]"

#. Tag: para
#: programming-reference.docbook:594
#, fuzzy, no-c-format
msgid ""
"The execution controller <userinput>while</userinput> is a lot like <link "
"linkend=\"if\"><userinput>if</userinput></link>. The difference is that "
"<userinput>while</userinput> keeps repeating (looping) the code between the "
"brackets until the <link linkend=\"boolean-value\">boolean</link> evaluates "
"<quote>false</quote>. <screen>\n"
"$x = 1\n"
"while $x &lt; 5 {\n"
"  forward 10\n"
"  wait 1\n"
"  $x = $x + 1\n"
"}\n"
"</screen> On the first line <userinput>$x</userinput> is set to 1. On the "
"second line <userinput>$x &lt; 5</userinput> is evaluated. Since the answer "
"to this question is <quote>true</quote> the execution controller "
"<userinput>while</userinput> starts executing the code between the brackets "
"until the <userinput>$x &lt; 5</userinput> evaluates <quote>false</quote>. "
"In this case the code between the brackets will be executed 4 times, because "
"every time the fifth line is executed <userinput>$x</userinput> increases by "
"1."
msgstr ""
"The execution controller <userinput>while</userinput> is a lot like <link "
"linkend=\"if\"><userinput>if</userinput></link>. The difference is that "
"<userinput>while</userinput> keeps repeating the code between the brackets "
"till the answer to the <link linkend=\"questions\">question</link> is "
"<quote>false</quote>. <screen>\n"
"x = 1\n"
"while x &lt; 5 [\n"
"  forward 10\n"
"  wait 1\n"
"  x = x + 1\n"
"]\n"
"</screen> On the first line <userinput>x</userinput> is set to 1. On the "
"second line the <link linkend=\"questions\">question</link> <userinput>x "
"&lt; 5</userinput> is asked. Since the answer to this question is "
"<quote>true</quote> the execution controller <userinput>while</userinput> "
"starts executing the code between the brackets till the answer to the <link "
"linkend=\"questions\">question</link> is <quote>false</quote>. In this case "
"the code between the brackets will be executed 4 times, because every time "
"the fifth line is executed <userinput>x</userinput> increases by 1.."

#. Tag: title
#: programming-reference.docbook:603
#, fuzzy, no-c-format
msgid "The \"repeat\" loop"
msgstr "The \"for\" loop"

#. Tag: term
#: programming-reference.docbook:606
#, fuzzy, no-c-format
#| msgid "<term>reset</term>"
msgid "<term>repeat</term>"
msgstr "<term>reset</term>"

#. Tag: primary
#: programming-reference.docbook:606
#, fuzzy, no-c-format
#| msgid "<term>reset</term>"
msgid "<primary>repeat</primary>"
msgstr "<term>reset</term>"

#. Tag: screen
#: programming-reference.docbook:607
#, fuzzy, no-c-format
#| msgid "if <link linkend=\"questions\">question</link> [ ... ]"
msgid "repeat <link linkend=\"number\">number</link> { ... }"
msgstr "if <link linkend=\"questions\">question</link> [ ... ]"

#. Tag: para
#: programming-reference.docbook:607
#, no-c-format
msgid ""
"The execution controller <userinput>repeat</userinput> is a lot like <link "
"linkend=\"while\"><userinput>while</userinput></link>. The difference is "
"that <userinput>repeat</userinput> keeps repeating (looping) the code "
"between the brackets for as many times as the given number."
msgstr ""

#. Tag: title
#: programming-reference.docbook:614
#, fuzzy, no-c-format
msgid "The \"for\" loop, a counting loop"
msgstr "The \"for\" loop"

#. Tag: term
#: programming-reference.docbook:617
#, no-c-format
msgid "<term>for</term>"
msgstr "<term>for</term>"

#. Tag: primary
#: programming-reference.docbook:617
#, fuzzy, no-c-format
#| msgid "<term>for</term>"
msgid "<primary>for</primary>"
msgstr "<term>for</term>"

#. Tag: primary
#: programming-reference.docbook:617
#, fuzzy, no-c-format
#| msgid "<term>go</term>"
msgid "<primary>to</primary>"
msgstr "<term>go</term>"

#. Tag: primary
#: programming-reference.docbook:617
#, no-c-format
msgid "step"
msgstr ""

#. Tag: screen
#: programming-reference.docbook:618
#, no-c-format
msgid ""
"for <link linkend=\"assignment-of-variables\">variable</link> = <link "
"linkend=\"number\">number</link> to <link linkend=\"number\">number</link> "
"{ ... }"
msgstr ""

#. Tag: para
#: programming-reference.docbook:618
#, fuzzy, no-c-format
msgid ""
"The <userinput>for</userinput> loop is a <quote>counting loop</quote>, &ie; "
"it keeps count for you. The first number sets the variable to the value in "
"the first loop. Every loop the number is increased until the second number "
"is reached. <screen>\n"
"for $x = 1 to 10 {\n"
"  print $x * 7\n"
"  forward 15\n"
"}\n"
"</screen> Every time the code between the brackets is executed the "
"<userinput>$x</userinput> is increased by 1, until <userinput>$x</userinput> "
"reaches the value of 10. The code between the brackets prints the <userinput>"
"$x</userinput> multiplied by 7. After this program finishes its execution "
"you will see the times table of 7 on the canvas."
msgstr ""
"The <userinput>for</userinput> loop is a <quote>counting loop</quote>, &ie; "
"it keeps count for you. <screen>\n"
"for x = 1 to 10 [\n"
"  print x * 7\n"
"  forward 15\n"
"]\n"
"</screen> Every time the code between the brackets is executed the "
"<userinput>x</userinput> is increased by 1, till <userinput>x</userinput> "
"reaches the value of 10. The code between the brackets prints the "
"<userinput>x</userinput> multiplied by 7. After this program finishes its "
"execution you will see the times table of 7 on the canvas."

#. Tag: para
#: programming-reference.docbook:623
#, no-c-format
msgid "The default step size of a loop is 1, you can use an other value with"
msgstr ""

#. Tag: screen
#: programming-reference.docbook:625
#, no-c-format
msgid ""
"for <link linkend=\"assignment-of-variables\">variable</link> = <link "
"linkend=\"number\">number</link> to <link linkend=\"number\">number</link> "
"step <link linkend=\"number\">number</link> { ... }"
msgstr ""

#. Tag: title
#: programming-reference.docbook:631
#, no-c-format
msgid "Leave a loop"
msgstr ""

#. Tag: term
#: programming-reference.docbook:634
#, fuzzy, no-c-format
#| msgid "<term>show</term>"
msgid "<term>break</term>"
msgstr "<term>show</term>"

#. Tag: primary
#: programming-reference.docbook:634
#, fuzzy, no-c-format
#| msgid "<term>show</term>"
msgid "<primary>break</primary>"
msgstr "<term>show</term>"

#. Tag: screen
#: programming-reference.docbook:635
#, fuzzy, no-c-format
#| msgid "<screen>reset</screen>"
msgid "<screen>break</screen>"
msgstr "<screen>reset</screen>"

#. Tag: para
#: programming-reference.docbook:635
#, no-c-format
msgid ""
"Terminates the current loop immediately and transfers control to the "
"statement immediately following that loop."
msgstr ""

#. Tag: title
#: programming-reference.docbook:642
#, no-c-format
msgid "Stop executing your program"
msgstr ""

#. Tag: term
#: programming-reference.docbook:645
#, fuzzy, no-c-format
#| msgid "<term>gox</term>"
msgid "<term>exit</term>"
msgstr "<term>gox</term>"

#. Tag: primary
#: programming-reference.docbook:645
#, fuzzy, no-c-format
#| msgid "<term>if</term>"
msgid "<primary>exit</primary>"
msgstr "<term>if</term>"

#. Tag: screen
#: programming-reference.docbook:646
#, fuzzy, no-c-format
#| msgid "<screen>reset</screen>"
msgid "<screen>exit</screen>"
msgstr "<screen>reset</screen>"

#. Tag: para
#: programming-reference.docbook:646
#, no-c-format
msgid "Finishes the execution of your program."
msgstr ""

#. Tag: title
#: programming-reference.docbook:653
#, no-c-format
msgid "Checking assertions at runtime"
msgstr ""

#. Tag: term
#: programming-reference.docbook:656
#, fuzzy, no-c-format
#| msgid "<term>reset</term>"
msgid "<term>assert</term>"
msgstr "<term>reset</term>"

#. Tag: primary
#: programming-reference.docbook:656
#, fuzzy, no-c-format
#| msgid "<term>for</term>"
msgid "<primary>assert</primary>"
msgstr "<term>for</term>"

#. Tag: screen
#: programming-reference.docbook:657
#, fuzzy, no-c-format
#| msgid "if <link linkend=\"questions\">question</link> [ ... ]"
msgid "assert <link linkend=\"boolean-value\">boolean</link>"
msgstr "if <link linkend=\"questions\">question</link> [ ... ]"

#. Tag: para
#: programming-reference.docbook:657
#, no-c-format
msgid "Can be used to reason about program or input correctness."
msgstr ""

#. Tag: screen
#: programming-reference.docbook:659
#, no-c-format
msgid ""
"$in = ask \"What is your year of birth?\"\n"
"# the year must be positive\n"
"assert $in > 0"
msgstr ""

#. Tag: title
#: programming-reference.docbook:668
#, fuzzy, no-c-format
msgid "Create your own commands with <quote>learn</quote>"
msgstr "Create your own commands"

#. Tag: para
#: programming-reference.docbook:669
#, fuzzy, no-c-format
msgid ""
"<userinput>learn</userinput><indexterm><primary>learn</primary></indexterm> "
"is special as it is used to create your own commands. The commands you "
"create can take <glossterm linkend=\"input-output\">input</glossterm> and "
"return <glossterm linkend=\"input-output\">output</glossterm>. Let us take a "
"look at how a new command is created: <screen>\n"
"learn circle $x {\n"
"  repeat 36 {\n"
"    forward $x\n"
"    turnleft 10\n"
"  }\n"
"}\n"
"</screen> The new command is called <userinput>circle</userinput>. "
"<userinput>circle</userinput> takes one <glossterm linkend=\"input-output"
"\">input</glossterm> argument, to set the size of the circle. "
"<userinput>circle</userinput> returns no <glossterm linkend=\"input-output"
"\">output</glossterm>. The <userinput>circle</userinput> command can now be "
"used like a normal command in the rest of the code. See this example:"
msgstr ""
"<userinput>learn</userinput> is a very special command, because it is used "
"to create your own commands. The command you create can take <glossterm "
"linkend=\"input-output\">input</glossterm> and return <glossterm linkend="
"\"input-output\">output</glossterm>. Let us take a look at how a new command "
"is created: <screen>\n"
"learn circle (x) [\n"
"  repeat 36 [\n"
"    forward x\n"
"    turnleft 10\n"
"  ]\n"
"]\n"
"</screen> The new command is called <userinput>circle</userinput>. "
"<userinput>circle</userinput> takes one <glossterm linkend=\"input-output"
"\">input</glossterm>, a number, to set the size of the circle. "
"<userinput>circle</userinput> returns no <glossterm linkend=\"input-output"
"\">output</glossterm>. The <userinput>circle</userinput> command can now be "
"used like a normal command in the rest of the code. See this example:"

#. Tag: screen
#: programming-reference.docbook:672
#, fuzzy, no-c-format
msgid ""
"learn circle $X {\n"
"  repeat 36 {\n"
"    forward $X \n"
"    turnleft 10 \n"
"  }\n"
"}\n"
"\n"
"go 200,200 \n"
"circle 20\n"
"\n"
"go 300,200 \n"
"circle 40"
msgstr ""
"learn circle (x) [ \n"
"   repeat 36 [ \n"
"     forward x \n"
"     turnleft 10 \n"
"   ] \n"
" ] \n"
" \n"
" go 30,30 \n"
" circle(20) \n"
" \n"
" go 40,40 \n"
" circle(50)"

#. Tag: para
#: programming-reference.docbook:674
#, fuzzy, no-c-format
msgid ""
"In the next example, a command with a return<indexterm><primary>return</"
"primary></indexterm> value is created. <screen>\n"
"learn faculty $x {\n"
"  $r = 1\n"
"  for $i = 1 to $x {\n"
"    $r = $r * $i\n"
"  }\n"
"  return $r\n"
"}\n"
"\n"
"print faculty 5\n"
"</screen> In this example a new command called <userinput>faculty</"
"userinput> is created. If the input of this command is <userinput>5</"
"userinput> then the output is <userinput>5*4*3*2*1</userinput>. By using "
"<userinput>return</userinput> the <glossterm linkend=\"input-output"
"\">output</glossterm> value is specified and the execution is returned."
msgstr ""
"In the next example a command with a return value is created. <screen>\n"
"reset\n"
"\n"
"learn multiplyBySelf (n) [\n"
"  r = n * 1\n"
"  r = n * n\n"
"  return r\n"
"]\n"
"i = inputwindow \"Please enter a number and press OK\"\n"
"print i + \" multiplied by itself is: \" + multiplyBySelf (i)\n"
"</screen> In this example a new command called <userinput>multiplyBySelf</"
"userinput> is created. The input of this command is multiplied by it self "
"and then returned, using the <anchor id=\"return\"/><userinput>return</"
"userinput> command. The <userinput>return</userinput> command is the way to "
"output a value from a function you have created."

#. Tag: para
#: programming-reference.docbook:677
#, no-c-format
msgid ""
"Commands can have more than one <glossterm linkend=\"input-output\">input</"
"glossterm>. In the next example, a command that draws a rectangle is "
"created: <screen>\n"
"learn box $x, $y {\n"
"  forward $y\n"
"  turnright 90\n"
"  forward $x\n"
"  turnright 90\n"
"  forward $y\n"
"  turnright 90\n"
"  forward $x\n"
"  turnright 90\n"
"}\n"
"</screen> Now you can run <userinput>box 50, 100</userinput> and the turtle "
"will draw a rectangle on the canvas."
msgstr ""

#, fuzzy
#~| msgid "<term>gox</term>"
#~ msgid "<primary>gox</primary>"
#~ msgstr "<term>gox</term>"

#, fuzzy
#~| msgid "<term>goy</term>"
#~ msgid "<primary>goy</primary>"
#~ msgstr "<term>goy</term>"

#, fuzzy
#~| msgid "<term>gox</term>"
#~ msgid "<term>exp</term>"
#~ msgstr "<term>gox</term>"

#, fuzzy
#~| msgid "<term>if</term>"
#~ msgid "<primary>exp</primary>"
#~ msgstr "<term>if</term>"

#, fuzzy
#~ msgid ""
#~ "Using commands you tell the turtle or &kturtle; to do something. Some "
#~ "commands need input, some give output."
#~ msgstr ""
#~ "Using commands you tell the turtle or &kturtle; to do something. Some "
#~ "commands need input, some give output. In this section we explain all the "
#~ "commands that can be used in &kturtle;."

#, fuzzy
#~ msgid "Questions"
#~ msgstr "Question glue-words"

#, fuzzy
#~ msgid ""
#~ "Using questions is extensively explained in the <link linkend=\"questions"
#~ "\">questions</link> section."
#~ msgstr "while <link linkend=\"questions\">question</link> [ ... ]"

#, fuzzy
#~ msgid "Question Glue-Words"
#~ msgstr "Question glue-words"

#, fuzzy
#~ msgid "A command that rolls dice for you"
#~ msgstr "A command that rolls a dice for you"

#~ msgid "Containers"
#~ msgstr "Containers"

#, fuzzy
#~ msgid ""
#~ "Containers are letters or words that can be used by the programmer to "
#~ "store a number or a text. Containers that contain a number are called "
#~ "<link linkend=\"variables\">variables</link>, containers that can contain "
#~ "text are called <link linkend=\"string\">string</link>. Containers can be "
#~ "identified by the container character <quote>$</quote> that precedes "
#~ "their usage."
#~ msgstr ""
#~ "Containers are letters or words that can be used by the programmer to "
#~ "store a number or a text. Containers that contain a number are called "
#~ "<link linkend=\"variables\">variables</link>, containers that can contain "
#~ "text are called <link linkend=\"strings\">strings</link>."

#~ msgid "Variables: number containers"
#~ msgstr "Variables: number containers"

#, fuzzy
#~| msgid ""
#~| "Let us start with an example: <screen>\n"
#~| "x = 3\n"
#~| "print x\n"
#~| "</screen> In the first line the letter <userinput>x</userinput> made "
#~| "into a variable (number container). As you see the value of the variable "
#~| "<userinput>x</userinput> is set to 3. On the second line the value is "
#~| "printed."
#~ msgid ""
#~ "Let us start with an example: <screen>\n"
#~ "$x = 3\n"
#~ "print $x\n"
#~ "</screen> In the first line the letter <userinput>x</userinput> is made "
#~ "into a variable (number container). As you see the value of the variable "
#~ "<userinput>x</userinput> is set to 3. On the second line the value is "
#~ "printed."
#~ msgstr ""
#~ "Let us start with an example: <screen>\n"
#~ "x = 3\n"
#~ "print x\n"
#~ "</screen> In the first line the letter <userinput>x</userinput> made into "
#~ "a variable (number container). As you see the value of the variable "
#~ "<userinput>x</userinput> is set to 3. On the second line the value is "
#~ "printed."

#~ msgid ""
#~ "Note that if we wanted to print an <quote>x</quote> that we should have "
#~ "written"
#~ msgstr ""
#~ "Note that if we wanted to print an <quote>x</quote> that we should have "
#~ "written"

#, fuzzy
#~| msgid "print \"x\""
#~ msgid "print \"x\""
#~ msgstr "print \"x\""

#, fuzzy
#~ msgid ""
#~ "Strings can also be stored in <link linkend=\"containers\">containers</"
#~ "link> just like <link linkend=\"number\">numbers</link> Strings are a lot "
#~ "like variables. The biggest difference is that they contain text in stead "
#~ "of numbers. For this reason strings cannot be used in <link linkend=\"math"
#~ "\">mathematical calculations</link> and <link linkend=\"questions"
#~ "\">questions</link>. An example of the use of strings: <screen>\n"
#~ "$x = \"Hello \"\n"
#~ "$name = ask \"Please enter your name...\"\n"
#~ "print $x + $name + \", how are you?\"\n"
#~ "</screen> On the first line the string <userinput>x</userinput> is set to "
#~ "<quote>Hello </quote>. On the second line the string <userinput>name</"
#~ "userinput> is set to the output of the <userinput>ask</userinput> "
#~ "command. On the third line the program prints a composition of three "
#~ "strings on the canvas."
#~ msgstr ""
#~ "Strings are a lot like variables. The biggest difference is that strings "
#~ "cannot be used in <link linkend=\"math\">mathematical calculations</link> "
#~ "and <link linkend=\"questions\">questions</link>. An example of the use "
#~ "of strings: <screen>\n"
#~ "x = \"Hello \"\n"
#~ "name = inputwindow \"Please enter your name...\"\n"
#~ "print x + name + \", how are you?\"\n"
#~ "</screen> On the first line the string <userinput>x</userinput> is set to "
#~ "<quote>Hello </quote>. On the second line the string <userinput>name</"
#~ "userinput> is set to the output of the <userinput>inputwindow</userinput> "
#~ "command. On the third line the program prints a composition of three "
#~ "strings on the canvas."

#~ msgid ""
#~ "This program ask you to enter your name. When you, for instance, enter "
#~ "the name <quote>Paul</quote>, the program prints <quote>Hello Paul, how "
#~ "are you?</quote>. Please note that the plus (+) is the only math symbol "
#~ "that you can use with strings."
#~ msgstr ""
#~ "This program ask you to enter your name. When you, for instance, enter "
#~ "the name <quote>Paul</quote>, the program prints <quote>Hello Paul, how "
#~ "are you?</quote>. Please note that the plus (+) is the only math symbol "
#~ "that you can use with strings."

#~ msgid "Can the Turtle do math?"
#~ msgstr "Can the Turtle do maths?"

#, fuzzy
#~ msgid ""
#~ "Yes, &kturtle; will do your math. You can add (+), subtract (-), multiply "
#~ "(*), and divide (/). Here is an example in which we use all of them: "
#~ "<screen>\n"
#~ "$a = 20 - 5\n"
#~ "$b = 15 * 2\n"
#~ "$c = 30 / 30\n"
#~ "$d = 1 + 1\n"
#~ "print \"a: \"+$a+\", b: \"+$b+\", c: \"+$c+\", d: \"+$d \n"
#~ "</screen> Do you know what value a, b, c and d have? Please note the use "
#~ "of the <link linkend=\"assignment\">assignment</link> symbol "
#~ "<userinput>=</userinput>."
#~ msgstr ""
#~ "Yes, &kturtle; will do your math. You can add (+), substract (-), "
#~ "multiply (*), and divide (/). Here is an example in which we use all of "
#~ "them: <screen>\n"
#~ "a = 20 - 5\n"
#~ "b = 15 * 2\n"
#~ "c = 30 / 30\n"
#~ "d = 1 + 1\n"
#~ "print \"a: \"+a+\", b: \"+b+\", c: \"+c+\", d: \"+d \n"
#~ "</screen> Do you know what value a, b, c and d have?"

#~ msgid "Asking questions, getting answers..."
#~ msgstr "Asking questions, getting answers..."

#, fuzzy
#~ msgid ""
#~ "<link linkend=\"if\"><userinput>if</userinput></link> and <link linkend="
#~ "\"while\"><userinput>while</userinput></link> are <link linkend="
#~ "\"controlling-execution\">execution controllers</link> that we will "
#~ "discuss in the next section. In this section we use the <link linkend=\"if"
#~ "\"><userinput>if</userinput></link> command to explain questions."
#~ msgstr ""
#~ "<link linkend=\"if\"><userinput>if</userinput></link> and <link linkend="
#~ "\"while\"><userinput>while</userinput></link> are <link linkend="
#~ "\"controlling-execution\">execution controllers</link> that we will "
#~ "discuss in the next section. In this section we use the <userinput>if</"
#~ "userinput> command to explain questions."

#, fuzzy
#~ msgid ""
#~ "A simple example of a question: <screen>\n"
#~ "$x = 6\n"
#~ "if $x &gt; 5 {\n"
#~ "  print \"hello\"\n"
#~ "}\n"
#~ "</screen> In this example the question is the <userinput>x &gt; 5</"
#~ "userinput> part. If the answer to this question is 'true' the code "
#~ "between the brackets will be executed. Questions are an important part of "
#~ "programming and often used together with <link linkend=\"controlling-"
#~ "execution\">execution controllers</link>, like <link linkend=\"if"
#~ "\"><userinput>if</userinput></link>. All numbers and <link linkend="
#~ "\"variables\">variables</link> (number containers) can be compared to "
#~ "each other with questions."
#~ msgstr ""
#~ "A simple example of questions: <screen>\n"
#~ "x = 6\n"
#~ "if x &gt; 5 [\n"
#~ "  print \"hello\"\n"
#~ "]\n"
#~ "</screen> In this example the question is the <userinput>x &gt; 5</"
#~ "userinput> part. If the answer to this question is <quote>true</quote> "
#~ "the code between the brackets will be executed. Questions are an "
#~ "important part of programming and often used together with <link linkend="
#~ "\"controlling-execution\">execution controllers</link>, like <link "
#~ "linkend=\"if\"><userinput>if</userinput></link>. All numbers and <link "
#~ "linkend=\"variables\">variables</link> (number containers) can be "
#~ "compared to each other with questions."

#~ msgid "Here are all possible questions:"
#~ msgstr "Here are all possible questions:"

#~ msgid "Types of questions"
#~ msgstr "Types of questions"

#~ msgid "a == b"
#~ msgstr "a == b"

#~ msgid "equals"
#~ msgstr "equals"

#~ msgid ""
#~ "answer is <quote>true</quote> if <userinput>a</userinput> equals "
#~ "<userinput>b</userinput>"
#~ msgstr ""
#~ "answer is <quote>true</quote> if <userinput>a</userinput> equals "
#~ "<userinput>b</userinput>"

#~ msgid "a != b"
#~ msgstr "a != b"

#, fuzzy
#~| msgid "not-equal"
#~ msgid "not-equals"
#~ msgstr "not-equal"

#~ msgid ""
#~ "answer is <quote>true</quote> if <userinput>a</userinput> does not equal "
#~ "<userinput>b</userinput>"
#~ msgstr ""
#~ "answer is <quote>true</quote> if <userinput>a</userinput> does not equal "
#~ "<userinput>b</userinput>"

#~ msgid "a &gt; b"
#~ msgstr "a &gt; b"

#~ msgid "greater than"
#~ msgstr "greater than"

#~ msgid ""
#~ "answer is <quote>true</quote> if <userinput>a</userinput> is greater than "
#~ "<userinput>b</userinput>"
#~ msgstr ""
#~ "answer is <quote>true</quote> if <userinput>a</userinput> is greater than "
#~ "<userinput>b</userinput>"

#~ msgid "a &lt; b"
#~ msgstr "a &lt; b"

#~ msgid "smaller than"
#~ msgstr "smaller than"

#~ msgid ""
#~ "answer is <quote>true</quote> if <userinput>a</userinput> is smaller than "
#~ "<userinput>b</userinput>"
#~ msgstr ""
#~ "answer is <quote>true</quote> if <userinput>a</userinput> is smaller than "
#~ "<userinput>b</userinput>"

#~ msgid "a &gt;= b"
#~ msgstr "a &gt;= b"

#~ msgid "greater than or equals"
#~ msgstr "greater than or equals"

#~ msgid ""
#~ "answer is <quote>true</quote> if <userinput>a</userinput> is greater than "
#~ "or equals <userinput>b</userinput>"
#~ msgstr ""
#~ "answer is <quote>true</quote> if <userinput>a</userinput> is greater than "
#~ "or equals <userinput>b</userinput>"

#~ msgid "a &lt;= b"
#~ msgstr "a &lt;= b"

#~ msgid "smaller than or equals"
#~ msgstr "smaller than or equals"

#~ msgid ""
#~ "answer is <quote>true</quote> if <userinput>a</userinput> is smaller than "
#~ "or equals <userinput>b</userinput>"
#~ msgstr ""
#~ "answer is <quote>true</quote> if <userinput>a</userinput> is smaller than "
#~ "or equals <userinput>b</userinput>"

#, fuzzy
#~ msgid "Question Glue"
#~ msgstr "Question glue-words"

#, fuzzy
#~ msgid ""
#~ "Question glue-words enable us to glue questions into one big question. "
#~ "<screen>\n"
#~ "$a = 1\n"
#~ "$b = 5\n"
#~ "if ($a &lt; $b) and ($b == 5) {\n"
#~ "  print \"hello\"\n"
#~ "}\n"
#~ "</screen> In this example the glue-word <userinput>and</userinput> is "
#~ "used to glue 2 questions (<userinput>a &lt; 5</userinput>, <userinput>b "
#~ "== 5</userinput>) together. If one side of the <userinput>and</userinput> "
#~ "would answer <quote>false</quote> the whole question would answer "
#~ "<quote>false</quote>, because with the glue-word <userinput>and</"
#~ "userinput> both sides need to be <quote>true</quote> in order to answer "
#~ "<quote>true</quote>. Please do not forget to use the brackets around the "
#~ "questions!"
#~ msgstr ""
#~ "Questions can also be glued to each other with <quote>question glue</"
#~ "quote>, this way a few questions can become one big question. <screen>\n"
#~ "a = 1\n"
#~ "b = 5\n"
#~ "if a &lt; 5 and b == 5 [\n"
#~ "  print \"hello\"\n"
#~ "]\n"
#~ "</screen> <anchor id=\"question-glue\"/>In this example the glue-word "
#~ "<userinput>and</userinput> is used to glue 2 questions (<userinput>a &lt; "
#~ "5</userinput>, <userinput>b == 5</userinput>) together. If one side of "
#~ "the <userinput>and</userinput> would answer <quote>false</quote> the "
#~ "whole question would answer <quote>false</quote>, because with the glue-"
#~ "word <userinput>and</userinput> both sides need to be <quote>true</quote> "
#~ "in order to answer <quote>true</quote>."

#~ msgid "Question glue-words"
#~ msgstr "Question glue-words"

#~ msgid "<userinput>and</userinput>"
#~ msgstr "<userinput>and</userinput>"

#, fuzzy
#~ msgid "Both sides need to be 'true' in order to answer 'true'"
#~ msgstr ""
#~ "both sides need to be <quote>true</quote> in order to answer <quote>true</"
#~ "quote>"

#~ msgid "<userinput>or</userinput>"
#~ msgstr "<userinput>or</userinput>"

#, fuzzy
#~ msgid "If one of the sides is 'true' the answer is 'true'"
#~ msgstr ""
#~ "if one of the sides is <quote>true</quote> the answer is <quote>true</"
#~ "quote>"

#~ msgid "<userinput>not</userinput>"
#~ msgstr "<userinput>not</userinput>"

#, fuzzy
#~ msgid "<title>and</title>"
#~ msgstr "<term>wrapon</term>"

#, fuzzy
#~ msgid "<title>or</title>"
#~ msgstr "<term>go</term>"

#, fuzzy
#~ msgid "<title>not</title>"
#~ msgstr "<term>go</term>"

#, fuzzy
#~| msgid "<term>go</term>"
#~ msgid "<primary>not</primary>"
#~ msgstr "<term>go</term>"

#, fuzzy
#~| msgid "if question [ ... ] else [ ... ]"
#~ msgid "if question { ... } else { ... }"
#~ msgstr "if question [ ... ] else [ ... ]"

#, fuzzy
#~| msgid ""
#~| "for <userinput>start point</userinput> to <userinput>end point</"
#~| "userinput> [ ... ]"
#~ msgid ""
#~ "for <userinput>start point</userinput> to <userinput>end point</"
#~ "userinput> { ... }"
#~ msgstr ""
#~ "for <userinput>start point</userinput> to <userinput>end point</"
#~ "userinput> [ ... ]"

#, fuzzy
#~| msgid ""
#~| "for <userinput>start point</userinput> to <userinput>end point</"
#~| "userinput> [ ... ]"
#~ msgid ""
#~ "for <userinput>start point</userinput> to <userinput>end point</"
#~ "userinput> step <userinput>step size</userinput> { ... }"
#~ msgstr ""
#~ "for <userinput>start point</userinput> to <userinput>end point</"
#~ "userinput> [ ... ]"

#, fuzzy
#~| msgid "Moving the turtle"
#~ msgid "Stop the turtle"
#~ msgstr "Moving the turtle"

#, fuzzy
#~| msgid "while"
#~ msgid "hide"
#~ msgstr "while"

#, fuzzy
#~ msgid "forward (fw)"
#~ msgstr "forward X"

#~ msgid "forward"
#~ msgstr "forward"

#, fuzzy
#~ msgid "backward (bw)"
#~ msgstr "backward X"

#~ msgid "backward"
#~ msgstr "backward"

#, fuzzy
#~ msgid "turnleft (tl)"
#~ msgstr "turnleft X"

#~ msgid "turnleft"
#~ msgstr "turnleft"

#, fuzzy
#~ msgid "turnright (tr)"
#~ msgstr "turnright X"

#~ msgid "turnright"
#~ msgstr "turnright"

#, fuzzy
#~ msgid "direction (dir)"
#~ msgstr "direction X"

#~ msgid "direction"
#~ msgstr "direction"

#, fuzzy
#~ msgid "<title>center</title>"
#~ msgstr "<term>centre</term>"

#, fuzzy
#~ msgid "<title>go</title>"
#~ msgstr "<term>go</term>"

#, fuzzy
#~ msgid "<title>gox</title>"
#~ msgstr "<term>gox</term>"

#, fuzzy
#~ msgid "<title>goy</title>"
#~ msgstr "<term>goy</term>"

#~ msgid "<screen>penup</screen>"
#~ msgstr "<screen>penup</screen>"

#~ msgid "<screen>pendown</screen>"
#~ msgstr "<screen>pendown</screen>"

#, fuzzy
#~ msgid "penwidth (pw)"
#~ msgstr "penwidth X"

#~ msgid "penwidth"
#~ msgstr "penwidth"

#, fuzzy
#~ msgid "pencolor (pc)"
#~ msgstr "pencolour"

#~ msgid "pencolor"
#~ msgstr "pencolour"

#, fuzzy
#~ msgid "<title>clear</title>"
#~ msgstr "<term>clear</term>"

#~ msgid "<screen>clear</screen>"
#~ msgstr "<screen>clear</screen>"

#, fuzzy
#~ msgid "<title>reset</title>"
#~ msgstr "<term>reset</term>"

#, fuzzy
#~ msgid "<title>show</title>"
#~ msgstr "<term>show</term>"

#~ msgid "<screen>show</screen>"
#~ msgstr "<screen>show</screen>"

#~ msgid "<screen>hide</screen>"
#~ msgstr "<screen>hide</screen>"

#~ msgid "random"
#~ msgstr "random"

#, fuzzy
#~ msgid "<title>message</title>"
#~ msgstr "<term>reset</term>"

#, fuzzy
#~ msgid "<title>ask</title>"
#~ msgstr "<term>wrapon</term>"

#~ msgid "wait"
#~ msgstr "wait"

#~ msgid "else"
#~ msgstr "else"

#, fuzzy
#~ msgid "canvassize (cs)"
#~ msgstr "canvassize"

#~ msgid "canvassize"
#~ msgstr "canvassize"

#, fuzzy
#~ msgid "canvascolor (cc)"
#~ msgstr "canvascolour"

#~ msgid "canvascolor"
#~ msgstr "canvascolour"

#, fuzzy
#~ msgid "<title>wrapon</title>"
#~ msgstr "<term>wrapon</term>"

#~ msgid "<screen>wrapon</screen>"
#~ msgstr "<screen>wrapon</screen>"

#~ msgid ""
#~ "With the <userinput>wrapon</userinput> command you can set <glossterm "
#~ "linkend=\"wrapping\">wrapping</glossterm> <quote>on</quote> for the "
#~ "canvas. Please see the glossary if you want to know what <glossterm "
#~ "linkend=\"wrapping\">wrapping</glossterm> is."
#~ msgstr ""
#~ "With the <userinput>wrapon</userinput> command you can set <glossterm "
#~ "linkend=\"wrapping\">wrapping</glossterm> <quote>on</quote> for the "
#~ "canvas. Please see the glossary if you want to know what <glossterm "
#~ "linkend=\"wrapping\">wrapping</glossterm> is."

#, fuzzy
#~ msgid "<title>wrapoff</title>"
#~ msgstr "<term>wrapoff</term>"

#~ msgid "<term>wrapoff</term>"
#~ msgstr "<term>wrapoff</term>"

#~ msgid "<screen>wrapoff</screen>"
#~ msgstr "<screen>wrapoff</screen>"

#~ msgid ""
#~ "With the <userinput>wrapoff</userinput> command you can set <glossterm "
#~ "linkend=\"wrapping\">wrapping</glossterm> <quote>off</quote> for the "
#~ "canvas: this means the turtle can move off the canvas and can get "
#~ "<quote>lost</quote>. Please see the glossary if you want to know what "
#~ "<glossterm linkend=\"wrapping\">wrapping</glossterm> is."
#~ msgstr ""
#~ "With the <userinput>wrapoff</userinput> command you can set <glossterm "
#~ "linkend=\"wrapping\">wrapping</glossterm> <quote>off</quote> for the "
#~ "canvas: this means the turtle can move off the canvas and can get "
#~ "<quote>lost</quote>. Please see the glossary if you want to know what "
#~ "<glossterm linkend=\"wrapping\">wrapping</glossterm> is."

#, fuzzy
#~ msgid "<title>inputwindow</title>"
#~ msgstr "<term>pendown</term>"

#, fuzzy
#~ msgid "<term>inputwindow</term>"
#~ msgstr "<term>pendown</term>"

#, fuzzy
#~ msgid "<title>forward</title>"
#~ msgstr "<term>for</term>"

#, fuzzy
#~ msgid "<title>penup</title>"
#~ msgstr "<term>penup</term>"

#, fuzzy
#~ msgid "<title>penwidth</title>"
#~ msgstr "<term>pendown</term>"

#, fuzzy
#~ msgid "<title>pencolor</title>"
#~ msgstr "<term>pendown</term>"

#, fuzzy
#~ msgid "<title>hide</title>"
#~ msgstr "<term>hide</term>"

#~ msgid "There is one command that rolls a dice for you"
#~ msgstr "There is one command that rolls a dice for you"

#~ msgid "Strings: text containers"
#~ msgstr "Strings: text containers"

#~ msgid ""
#~ "<userinput>and</userinput> is not the only glue-word there are two "
#~ "others. They are all in the next table:"
#~ msgstr ""
#~ "<userinput>and</userinput> is not the only glue-word there are two "
#~ "others. They are all in the next table:"

#~ msgid ""
#~ "only if both of the sides are <quote>false</quote> the answer is "
#~ "<quote>false</quote>"
#~ msgstr ""
#~ "only if both of the sides are <quote>false</quote> the answer is "
#~ "<quote>false</quote>"

#~ msgid "Execute \"while\""
#~ msgstr "Execute \"while\""

#~ msgid "print"
#~ msgstr "print"

#~ msgid "fontsize"
#~ msgstr "fontsize"
